{"version":3,"sources":["./src/app/menu/weekly/weekly.component.ts","./src/app/menu/weekly/weekly.component.html","./src/app/menu/weekly/week2/week2.component.ts","./src/app/menu/weekly/week2/week2.component.html","./src/environments/environment.ts","./src/app/menu/monthly/month1/book2/book2.component.ts","./src/app/menu/monthly/month1/book2/book2.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/app.module.ts","./src/app/menu/weekly/week1/week1.component.ts","./src/app/menu/weekly/week1/week1.component.html","./src/app/menu/weekly/week3/week3.component.ts","./src/app/menu/weekly/week3/week3.component.html","./src/app/menu/monthly/monthly.component.ts","./src/app/menu/monthly/monthly.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/menu/monthly/month1/month1.component.ts","./src/app/menu/monthly/month1/month1.component.html","./src/app/menu/weekly/week4/week4.component.ts","./src/app/menu/weekly/week4/week4.component.html","./src/app/menu/monthly/month1/book1/book1.component.ts","./src/app/menu/monthly/month1/book1/book1.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Week1Component } from './week1/week1.component'\nimport { Week2Component } from './week2/week2.component'\nimport { Week3Component } from './week3/week3.component';\nimport { Week4Component } from './week4/week4.component';\n@Component({\n  selector: 'app-weekly',\n  templateUrl: './weekly.component.html',\n  styleUrls: ['./weekly.component.scss']\n})\nexport class WeeklyComponent implements OnInit {\n  weeks = [\n    {\n      \"name\":\"Week 1\",\n      \"description\":\"From March 29th to April 2nd\",\n      \"component\":Week1Component\n    },\n    {\n      \"name\":\"Week 2\",\n      \"description\":\"From April 5th to April 9th\",\n      \"component\":Week2Component\n    },\n    {\n      \"name\":\"Week 3\",\n      \"description\":\"From April 12th to April 16th\",\n      \"component\":Week3Component\n    },\n    {\n      \"name\":\"Week 4\",\n      \"description\":\"From April 19th to April 23th\",\n      \"component\":Week4Component\n    }\n  ];\n  constructor() {\n   }\n\n  ngOnInit(): void {\n    console.log();\n  }\n\n}\n","<mat-accordion>\n  <mat-expansion-panel hideToggle *ngFor=\"let week of weeks\" class=\"exP\">\n    <mat-expansion-panel-header>\n      <mat-panel-title style=\"color: white;\">{{week.name}}</mat-panel-title>\n      <mat-panel-description style=\"color: white;\">{{week.description}}</mat-panel-description>\n    </mat-expansion-panel-header>\n    <ng-container *ngComponentOutlet=\"week.component\"></ng-container>\n  </mat-expansion-panel>\n</mat-accordion>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-week2',\n  templateUrl: './week2.component.html',\n  styleUrls: ['./week2.component.scss']\n})\nexport class Week2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    I could summarize this week reading and videos enlisting the following points: \n    <ul>\n        <li>It is good to have your intuition, which is convenient in multiples situations. However, you must verify your intuition, treat it as a starting point rather than the answer.</li>\n        <li>You can't say you solved a problem if you did not identify it.</li>\n        <li>The more united an organization is, the stronger it becomes.</li>\n        <li>Creativity means a continued activity. You have to build it day by day and record it. </li>\n        <li>The faster you hands-on, the quicker your idea will evolve.</li>\n        <li>Your effort must be focused on stared problems. Optimization and perfection are overrated. The best products and services are not perfect, but they exist and work.</li>\n        <li>Sometimes, we are living in automatic mode, which is convenient for some aspects of life. However, you only can really enjoy the things you are conscious of. Avoid automatic mode in the core aspects of your life.</li>\n        <li>If you want to master something, you should:\n            <ul>\n                <li>practice as much as you can</li>\n                <li>You should choose a topic to focus on. For the related ones, do a library of examples. Mastering something takes a lot of time, and life is short.</li>\n                <li>Console commands are helpful for a lot of processes.</li>\n            </ul>\n        </li>\n    </ul>\n</div>\n<mat-accordion>\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>The scientific method</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h2>How to go through the process? </h2>\n        <p>When you are in charge, it is relevant to know the entire process of whatever you are doing. Because that way, you could participate in any stage and understand the value that others provide.</p>\n        <p>Sometimes, it is better to do something partially right than not do anything at all.</p>\n        <h2>Journaling</h2>\n        <p>It helps you to keep track of your process and to consult later.</p>\n        <h3>Important journal questions</h3>\n        <ul>\n            <li>What are you\n                <ul>\n                    <li>Thinking?</li>\n                    <li>Doing?</li>\n                </ul>\n            </li>\n            <li>What do you want to \n                <ul>\n                    <li>Do?</li>\n                    <li>Know?</li>\n                </ul>\n            </li>\n            <li>What did you discover?</li>\n        </ul>\n        <h2>Problem discovery</h2>\n        <p>This process is about discovering the components of a problem, their manifestations, and understanding their causes and effects.</p> \n        <h2>Observation </h2>\n        <p>You must avoid taking what you know for granted. First, observe the system, and try to understand it.</p>\n        <h2>Data gathering</h2>\n        <p>Try to identify cause-effect relationships and then gather information about them.</p>\n        <h2>Data analysis</h2> \n        <p>Try to use the data to prove your ideas wrong or right. You must analyze data, even if you think you understand the problem.</p>\n        <h2>Hypothesis generation</h2> \n        <p>Your ideas should be written down in a sentence that explains what is going on.</p>\n        <p>You could use the Taguchi diagram to externalize and organize ideas.</p>\n        <h2>Experimental design</h2> \n        <p>Experimental design is a methodology that helps you be efficient and allows you to have a degree of reliability on the results you get.</p>\n        <h2>Tests</h2> \n        <p>These are a set of protocols that anyone can use to replicate your observations. They are the proof of your conclusion.</p>\n        <h2>Problem definition</h2> \n        <p>You should define your problem in a single simple sentence. However, you could have several. Sometimes, the nature of the problem guides you to multiples phenomena.</p>\n        <h2>Definition</h2> \n        <p>The definition should be a single sentence that explains the problem. It must have coherence with your data and work.</p>\n        <h2>Constraints</h2> \n        <p>Make sure to list all the conditions and their importance. This will allows others to replicate your work.</p>\n        <h2>Search for solution </h2> \n        <h2>Research</h2> \n        <p>Start by looking at what others have done. Then, if nobody has solved your hypothesis, you could start yours. The advantage of doing this way is that you get the wise of others.</p>\n        <h2>Scientific papers</h2> \n        <p>The standard to share discoveries is the scientific paper. They show the methodology followed, the results, and conclusions.</p>\n        <h2>Brainstorming </h2> \n        <p>Think about possibilities and write them. It does not matter if those do not make sense at all.</p>\n        <h2>Modeling</h2> \n        <p>Discard everything that does not work with the problem definition</p>\n        <h2>Prototyping</h2> \n        <p>It is a simplified system that proves if the component can be built.</p>\n        <h2>Specification</h2> \n        <p>It is the guide with which you build the solution.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>What are the most profound life lessons from Stanford Professor John Ousterhout?</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <ul>\n            <li>We should focus on simplicity and quality rather than speed or performance. Most computers can deal with many applications.</li>\n            <li>Only think on optimize when it is required. It is hard to guess which part worth it.</li>\n            <li>Use your intuition to ask questions. Treat it as a hypothesis rather than the answer.</li>\n            <li>Most of the time is better to try something to understand a concept. It is recommended to use the cycle concept-fact-concept.</li>\n            <li>You could not say you solved a problem you have not identified. Sometimes, an error could be solved by coincidence. The error scenario was probably avoided. So if it presents again, the error will rise again. </li>\n            <li>The early you test your project, the quicker you will find its issues. Furthermore, you will minimize wasting effort on useless functions.</li>\n            <li>If you want to build credibility, be honest. It is ok to say I do not know or I made a mistake instead of trying to build a false image.</li>\n        </ul>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Scott Berkun: Creative thinking hacks</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>Creativity is a kind of work. You need to do something</p>\n        <p>The ideas are made of other ideas. If you got stuck, mix some ideas to get a new picture.</p>\n        <p>In inhibition, you have to be very aware of constraints. As you remove unnecessary assumptions, including fears, your solution becomes more creative.</p>\n        <p>You have to pay attention to your own, identify what works better for you. Commonly, physical activity helps you with creativity.</p>\n        <p>Persistence, things take time to get done.</p>\n        <h2>Hacks</h2>\n        <ul>\n            <li>Keep a journal. It is better if it is physical.</li>\n            <li>Escape: Ideas tends to show up when you are relaxed</li>    \n            <li>Steps of building an idea\n                <ul>\n                    <li>Understanding</li>\n                    <li>Incubation</li>\n                    <li>Elaboration</li>\n                </ul>\n            </li>\n            <li>Invert, solve/imagine the opposite problem/perspective from the one you are trying to solve.</li>\n            <li>Find a partner</li>\n            <li>Fail. Try your ideas</li>\n            <li>Switch modes\n                <ul>\n                    <li>Visually</li>\n                    <li>Verbally</li>\n                    <li>Audibly</li>\n                    <li>Physically</li>\n                </ul>\n            </li>\n            <li>Try to explain to others what you are doing. </li>\n            <li>You have to be aware of the culture and environment where you are working.</li>\n        </ul> \n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Jonathan Haidt: Religion, evolution, and the ecstasy of self-transcendence</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>It is significant to be united with others. The more united we are, the more solid we will be.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Autopilot Britain</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>Autopilot is a growing problem. It is becoming our default mode of operating, whereby we are sleepy walking into our choices.</p>\n        <h2>What is autopilot, and why is it a problem?</h2>\n        <p>It is a decision-making system to keep our brains from overloading.</p>\n        <h2>What are the cultural conditions that drive autopilot today?</h2>\n        <ul>\n            <li>We are too busy to notice what decisions we make</li>\n            <li>Tech makes us sleepwalk into our choices</li>\n            <li>We spend too much time comparing ourselves to ideals we can not live up to</li>\n        </ul>\n        <h2>Autopilot types</h2>\n        <ul>\n            <li>The players, those could not say no</li>\n            <li>The pacers, the busy ones</li>\n            <li>The passengers</li>\n        </ul>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Ideas are just a multiplier of execution</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <img src=\"assets/Week 1/ideas.png\">\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>How progress really happens</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>There is no change until someone stakes their reputation on doing something different. You can’t make change without power. So, you have to be conscious about what you want to do.</p>\n        <h2>Change</h2>\n        <p>We don’t like changes, some reasons are:</p>\n        <ul>\n            <li>It takes energy</li>\n            <li>It generates uncertain situations and risks</li>\n        </ul>\n        <h2>Tactics you should know</h2>\n        <ul>\n            <li>Talk about the problem you want to solve</li>\n            <li>Get consensus</li>\n            <li>Think about how much power you will need to make a change</li>\n            <li>Disseminate your idea</li>\n            <li>Look for people open to change (unhappier/discomforted ones)</li>\n            <li>Start with something small you can build and share to convince (pilot)</li>\n            <li>Motivate people</li>\n            <li>Cover your people</li>\n        </ul>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>How to Master Anything: PEAK by Anders Ericsson | Core Message</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <ul>\n            <li>Mental representations</li>\n            <li>Recreate experience</li>\n            <li>Make accurate predictions</li>\n            <li>Condense information</li>\n            <li>Effective practice</li>\n            <li>Purposeful practice</li>\n            <li>Specific goal</li>\n            <li>Intense focus</li>\n            <li>Immediate feedback</li>\n            <li>Freely make mistakes</li>\n            <li>Purpose practice + Mentor</li>\n        </ul>\n    </mat-expansion-panel>\n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Making Badass Developers - Kathy Sierra (Serious Pony)</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>Split your skills and master what you need. Practice always. Build a library of small examples.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>The missing semester: Course overview + the shell</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>Commands allow you to do several kinds of stuff some of them are not possible through graphical interfaces.</p>\n        <ul>\n            <li>\"echo\" with $PATH shows you the path variables, echo is a kind of print. </li>\n            <li>Absolute paths are paths that fully determine the location of a file. </li>\n            <li>\"PWD\" prints the current path you are in </li>\n            <li>cd changes directory </li>\n            <li>cd ~ returns you to the home directory  </li>\n            <li>cd - returns you to the previous directory you were </li>\n            <li>ls show you the files and directories  </li>\n            <li>Command + —help usually gives you help or small documentation about the command. </li>\n            <li>mv used to move/change name arguments original path, a new path </li>\n            <li>cp copy command </li>\n            <li>rm removes files, if you want to remove a directory with files is rm -r, to delete a directory is rmdir. To create a directory use mkdir </li>\n            <li>man gives the manual page of any program </li>\n            <li>ctr l allows you to clear the console </li>\n            <li>command < pathfileInput > pathFileOutput </li>\n            <li>command > pathFileOutput </li>\n            <li>cat print content of a file </li>\n            <li>>> used for append </li>\n            <li>| (pipe) takes the output of a program and use it as an argument of the next </li>\n            <li>tail -nX prints the nX last inputs </li>\n            <li>Example </li>\n            <li>ls -l | tail -n2 </li>\n            <li>curl --head --silent google.com </li>\n            <li>grep -i content-length </li>\n            <li>sudo su convert the shell into superuser </li>\n            <li>tee writes into a file </li>\n            <li>xdg-open fileNamePath opens a file (linux) </li>\n        </ul>\n    </mat-expansion-panel>\n</mat-accordion>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-book2',\n  templateUrl: './book2.component.html',\n  styleUrls: ['./book2.component.scss']\n})\nexport class Book2Component implements OnInit {\n\n  constructor(public dialogRef:MatDialogRef<Book2Component>) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"accent\"> \n    <mat-toolbar-row>\n        Make it Stick\n        <span class=\"flex-spacer\"></span>\n        <button mat-button mat-dialog-close>&times;</button>\n    </mat-toolbar-row>\n    <mat-toolbar-row>\n        Summary By Yasuo Maidana\n    </mat-toolbar-row>\n</mat-toolbar>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'academy';\n}\n","<app-header></app-header>\n<app-menu></app-menu>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group mat-align-tabs=\"center\" color=\"accent\">\n    <mat-tab label=\"Weekly Journal\">\n        <app-weekly></app-weekly>\n    </mat-tab>\n\n    <mat-tab label=\"Monthly Lectures\">\n        <app-monthly></app-monthly>\n    </mat-tab>\n\n</mat-tab-group>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { HeaderComponent } from './header/header.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { WeeklyComponent } from './menu/weekly/weekly.component';\nimport { Week1Component } from './menu/weekly/week1/week1.component';\nimport { Week2Component } from './menu/weekly/week2/week2.component';\nimport { MothlyComponent } from './menu/monthly/monthly.component';\nimport { Month1Component } from './menu/monthly/month1/month1.component';\nimport { Book1Component } from './menu/monthly/month1/book1/book1.component';\nimport { Book2Component } from './menu/monthly/month1/book2/book2.component';\nimport { Week3Component } from './menu/weekly/week3/week3.component';\nimport { Week4Component } from './menu/weekly/week4/week4.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    MenuComponent,\n    WeeklyComponent,\n    Week1Component,\n    Week2Component,\n    MothlyComponent,\n    Month1Component,\n    Book1Component,\n    Book2Component,\n    Week3Component,\n    Week4Component,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatTabsModule,\n    BrowserAnimationsModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit,ViewContainerRef } from '@angular/core';\n\n@Component({\n  selector: 'app-week1',\n  templateUrl: './week1.component.html',\n  styleUrls: ['./week1.component.scss']\n})\nexport class Week1Component implements OnInit {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    This week I read and saw some content related to time administration and personal growth. If I had to explain in few words, I could enlist all the material studied the following way: \n    <ul>\n        <li>\n            Building and forgetting habits \n        </li>\n        <li>\n            The importance of accepting you can grow up more \n        </li>\n    </ul>\n</div>\n<mat-accordion>\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>How to build a new habit: This is your strategy guide.</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h2>Start with a small custom</h2>\n        <p>\n            We have to consider that our will and energy are not the same all day. Additionally, since it consumes vitality, you have an amount of stamina you have to care about. However, like any physical activity, you can increase the amount of strength you have. Here is when the Napoleonic principle enters, divide and conquer.  Maybe you could not acquire a full habit in a row, but you could cut in pieces and acquire them step by step. \n        </p>\n        <h2>Increase your habit in tiny ways</h2>\n        <p>\n            This part sounds very close to the KAIZEN principle. It means that every great success is only the product of continuous improvements. \n        </p>\n        <h2>As you build up, break habits into pieces.</h2>\n        <p>This could count as a part of the Napoleonic principle but focused on stamina administration.  \n        </p>\n        <h2>When you slip, get back on track quickly. \n        </h2>\n        <p>Here talks about being aware of your flaws. You cannot be perfect, but you can have backups plans. \n        </p>\n        <h2>Be patient. Stick to a pace you can sustain \n        </h2>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>How to start new habits that stick</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h2>The science of how habit work \n        </h2>\n        <p>The four stages of habits are:</p>\n            <ul>\n                <li>Cue: It is a kind of signal that alerts you of a possible reward </li>\n                <li>Craving: It is the desire behind the actions, is the motivation of what you are doing \n                </li>\n                <li>Response: It is an actual habit, depends a lot on the incentive and the inertia of the activity itself. \n                </li>\n                <li>Reward: The goal \n                </li>\n            </ul>\n        <p>We can split these four steps into two phases: \n        </p>\n            <ul>\n                <li>The problem phase: It includes clue and craving \n                </li>\n                <li>The solution phase: It involves response and reward \n                </li>\n            </ul>\n        <h2>Where to go from here</h2>\n        <p>If we understand how the cycle works, we could take advantage of it. If we want to create good habits. We have to make the cue obvious, the craving very attractive, the response (actions) easy, and the reward satisfying. \n        </p>\n        <p>On the other hand, if we want to forget a bad habit, we must do the opposite: we have to hide the cue, convert the craving into something unattractive, responding to laborious actions, and rewarding into something unsatisfying. \n        </p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Identity-Based Habits: How to Stick to Your Goals This Year</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h2>Identity-Based Habits</h2>\n        <p>The remarkable concept here is that you act as the image you have about yourself. Additionally, rather than just propose ideal goals, it is better to define specific and measurable goals. \n        </p>\n        <h2>The three levels of change: \n        </h2>\n        <ul>\n            <li>The first layer is changing your outcomes. You have to change your results by doing something in the direction of your goal. </li>\n            <li>The second layer is changing your process. It is related to habits and the system that you must create to achieve your goal. \n            </li>\n            <li>The third and deepest layer is changing your identity. This is an alternative to outcome-based habits, which are more related to specific actions or goals. On the other hand, identity-based is focused on the image that you want to build about yourself.  \n            </li>\n        </ul>\n        <h2>The Recipe for Sustained Success \n        </h2>\n        <p>To change your belief about yourself, you could take the following steps: \n        </p>\n        <ul>\n            <li>Decide the type of person you want to be \n            </li>\n            <li>Prove it to yourself with small wins \n            </li>\n            <li>The first step could seem difficult; however, a good practice could be asking yourself: “Who is the type of person that could get the outcome I want?”. Then start planning small steps to achieve it. \n            </li>\n        </ul>\n        <h2>What is your identity? \n        </h2>\n        <p>Being motivated is good; however, you have to be very aware of it. If you don’t control it, you could end burn out after a while, or on the other hand, you could lose your focus. \n        </p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>The power of vulnerability</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>This talk relies a lot on the sense of human connection. If we start from the idea that connection is the thing that makes sense to be here and that the shame is the fear of disconnection.  We could end with the premise that there were two groups of people: the ones that sense intense connections and the others that not. The variable that separates those who have a strong sense of love and belonging and the people who struggle for it is that the first group believes that they deservers it, and they are worthy.</p>\n        <p>However, the first group feels vulnerable. Nevertheless, they believe that what made them vulnerable made them beautiful too. </p>  \n        <p>We have to be very aware of numbing the vulnerability. Because we can’t selectively numb emotion, so if we started, we could end numbing everything. </p>\n        <p>Blame is a way to discharge pain and discomfort.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Nearsoft conferences</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>There were several speeches at the conference. However, I put special attention to product development’s advice, microservices, and the apprentice path.</p>\n        <h2>Product development’s advice \n        </h2>\n        <p>Some good practices of product development rely on the connecting ability. You must understand your client and customer before doing anything. The main reason, sometimes you got stuck into a specific way of solving a problem, maybe for a technical or even a personal motive. However, if you understand what your client wants, behaves, and senses, you could find a better solution. \n        </p>\n        <p>Then the other recommendations were focused on project implementation, for example, doing good comments and documentation and finding a team motivated with the goal. \n        </p>\n        <h2>Microservices</h2>\n        <p>We could define them as a collection of independent tools that helps you to develop a project. They have several pros and cons, which are very related. As the number of tools increases, the network information becomes more complex. The advantage of using independent tools rely on the fact that you could modify, maintain and test without affecting all the system you already have. \n        </p>\n        <h2>Apprentice path </h2>\n        <p>In the last speech, the topic was how to become a good apprentice. I found this talk appropriate for any context. Because it doesn’t matter which discipline you choose, if you believe that you have mastered it, you couldn’t grow up anymore in that field. The reason, you can only bloom as you are concern about your scope beyond. \n        </p>\n        <p>In few words, you have to be humble to recognize you can develop. However, you also have to be wise to note your knowledge to help others. </p>    \n    </mat-expansion-panel>\n</mat-accordion>\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-week3',\n  templateUrl: './week3.component.html',\n  styleUrls: ['./week3.component.scss']\n})\nexport class Week3Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1></h1>\n<p>This week was very interesting. I've learned several things about different areas starting from how some compressors work to how to work better with others. \n    If I should summarize this week in three words, I'll choose remix, kaizen, and collaboration. \n    It is marvelous how the combination of different disciplines ends up with a totally new concept.  </p>\n<p>For example: </p>\n    <ul><li>Space state machines + Bayesian probability = Markov compression method </li></ul>\n<p>A topic that caught me was the one related to collaboration and tolerance. That showed me that we must be concern about our bias. Everybody indeed has, but that should not be an excuse to try to comprehend and accept others. \n    Additionally, we should be aware of how we express ourselves to others. We could be harming without knowing.  \n    Finally, work in teams involves several abilities. A lot of them are related to how we perceive others. When we work as a team, we have to see our partners, not for judging but for asking or giving help because, in the end, we are pulling the same boat. </p>\n\n\n<mat-accordion>\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Tooling techniques for the performance ninja - Chrome Dev Summit 2013 (Colt\n                McAnlis)</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <img src=\"assets/Week 3/Performance Tuning Loop.png\" style=\"width: 50%;\"> \n        <h2>Perfmatters</h2>\n    \n<p>\n    What can be measured can be optimized.\n    That means if we can't have a reference about something, this could not be\n    enhanced since we don't know if we are going better or worse.\n</p>\n    \n    <h3>Three steps of performance</h3>\n    <ol>\n        <li>Gather</li>\n        <li>Insight</li>\n        <li>Action</li>\n        <li>Repeat</li>\n    </ol>\n\n    <h3>3 Pillars of web performance</h3>\n    <ol>\n        <li>Network</li>\n        <ul>\n            <li><p>Optimize the critical path: A browser can paint nothing until it is resolved. This could be done by:</p>\n                <ul>\n                    <li>Reducing # of critical-path requests</li>\n                    <li>Compressing your data</li>\n                </ul>\n            </li>\n        </ul>\n        <li>Render\n            <ul>\n                <li>Reduce paints</li>\n                <li>Avoid repaint</li>\n            </ul>\n        </li>\n        <li>Compute\n            <ul><li>Reduce JS execution time</li></ul>\n        </li>\n    </ol>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Variable Length Codes (Ep 1, Compressor Head)</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>Conversion and compression are closely related to\n            internet speed.</p>\n            \n            <p>Morse code beginning of sharing information through an\n            electromagnetic field, they assigned their representation based on usage\n            distribution </p>\n            \n            <p>There exists some representation based on the morse\n            code distribution approach.</p>\n            \n            <h2>Claud Shannon</h2>\n            \n            <p>His definition of entropy, a minimum number of bits to\n            model data, represents the best estimate of the minimum number of bits required\n            to represent the string allows to create a way of storing information content\n            based on the probability of symbols. </p>\n            \n            <p>His method consists on: </p>\n            \n            <p>Assign shortest codes to most frequent symbols.  </p>\n            \n            <p>Prefix Property: Once a code has been assigned to a\n            symbol, no other code can start with that pattern</p>\n            \n            <h2>David Huffman</h2>\n            <img src=\"assets/Week 3/char encoding.png\">\n            <p>He created the Huffman tree that assigns the shortest\n            variable to the commoner word.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>The LZ77 Compression Family (Ep 2, Compressor Head)</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>This concept is easier to explain through images. The main\n            idea is to attempt to find repeated sequences and assign them to a pointer that\n            recursively builds the information encoded. </p>\n            \n            <img src=\"assets/Week 3/lz.png\">\n            <p>LZ Family</p>\n            \n            <p>LZ77-78</p>\n            \n            <p><a\n            href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-wusp/fb98aa28-5cd7-407f-8869-a6cef1ff1ccb\">https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-wusp/fb98aa28-5cd7-407f-8869-a6cef1ff1ccb</a></p>\n            \n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Markov Chain Compression (Ep 3, Compressor Head) </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <img src=\"assets/Week 3/Two-state model.png\">\n        <p><a href=\"https://www.youtube.com/watch?v=i3AkTO9HLXo\">https://www.youtube.com/watch?v=i3AkTO9HLXo</a></p>\n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Google I/O 2009 - The Myth of the Genius Programmer </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>People are afraid of showing their ignorance.</p>\n    <p>Bus factor, made your teams avoid concentrate all the knowledge and responsibility so if that person disappears all the project ends.</p>\n    <p>Drop ego </p>\n    <p>Criticism is not evil if it helps to improve.</p>\n    <p>Practice is the key to master anything.</p>\n    <p>Be the small fish try to challenge yourself. If you are always choosing easy projects, you won't grow up working on the edge of your knowledge.</p>\n    <p>Be influenced</p>\n    <p>Be vulnerable</p>\n    <p>Technology does not solve social issues. Only people can deal with emotions and human behavior. It doesn't matter how advanced is software or a tool if the people don't want to change, it won't work.</p>\n    <p>Don't try to be a genius; that is not necessary. Just collaborate early and often pay attention to your tools and timing.</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Google I/O 2012 - The Art of Organizational Manipulation </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>You need to learn how to navigate in teams. Nowadays projects, are designed and built inside them. So learning how to work in them is necessary not only for the good of the project but for your personal and professional growth.</p>\n    <p>If you are in charge, you should be a\n    servant leader looking for the needings of the team (tools, knowledge, or\n    emotional support). If they are well, they work well also.</p>\n    <p>Additionally, you should pursue\n    responsibility and act like an adult.</p>\n    <h2>Environment </h2>\n    <p>Some practices and behaviors must be\n    avoided:</p>\n    <p>Being conservative </p>\n    <p>\n    Ignores low performers. They are the ones who need helps. As a\n    Muslim saying goes, a caravan is as fast as the slowest of its camels.</p>\n    <p>The office politician </p>\n    <p>The boss that asks for performance but doesn’t do anything </p>\n    <p>Unrealistic expectations </p>\n    <p>Distrust</p>\n    <h2>How do you get things done in a dysfunctional environment? </h2>\n    <p>Ask for forgiveness, not for permission</p>\n    <p>Sneak ideas in </p>\n    <p>Don’t destroy, change </p>\n    <p>Try solutions </p>\n    <p>Work the ladder </p>\n    <p>Manage upward perception </p>\n    <p>Use the favor economy </p>\n    <p>Get in front of the people </p>\n    <p>Learn how to ask a busy exec for anything\n    </p>\n    <p>Make small emails, and try to be the most\n    efficient as you could </p>\n    <p>Don’t be a victim</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Google I/O 2011: Programming Well with Others: Social Skills for Geeks </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>You should to look for autonomy, responsibility and purpose<br>\n    <br>\n    </p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Developing Expertise: Herding Racehorses, Racing Sheep </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>Software development has several ranges of experiences since\n    neither the people neither the project are the same </p>\n    <p>It is a journey, so some practices you acquired could change\n    through time </p>\n    <p>Intuition </p>\n    <p>Be interactive with novice, avoid useless information. For\n    example, large spec sheets or information that won't be using at the beginning.</p>\n    <p>Activities should change between levels. Novices require and\n    need rules and short-time tasks. While senior developers could be bothered with\n    administrative kinds of stuff, the delegation of responsibilities helps focus\n    meanwhile could help beginners to learn the know-how.</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Damien Katz @ DevconTLV: The Best Programming Language </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>There is no best programming\n    language. </p>\n    <p>Criteria for choosing a\n    programming language: </p>\n    <p>\n    Productivity: You have to identify\n    what is the better scenario for a given language. Which variables and functions\n    are built in it, and what do you need. </p>\n    <p>\n    Performance: You have to be aware of\n    the dimension/size of your project. For example, some functions could afford some\n    low performance. However, if the project works well, don’t waste time on those\n    tasks. </p>\n    <p>\n    Reliability: You have to select a\n    language that affords the SLA.  </p>\n    <p>\n    Portability: It doesn’t matter if it\n    is the most powerful language if you can’t use it in your deployment’s\n    environment </p>\n    <p>\n    Community:  </p>\n    <p>\n    What you already know: There is value\n    in learning something new.</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Perfection Is An Unrealistic Goal </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>Sometimes the process of a task could\n    become extremely long and tedious than the task itself. On most occasions, it\n    is better to try an idea and see how it works than prepare extraneous research.\n    Remember, you can’t specify something you have no idea about, so trying to\n    start from there could be troublesome. </p>\n    <h2>Some Myths </h2>\n    <p>We can understand/know something at all.</p>\n    <p>The things are linear. Nothing in nature\n    behaves that way, neither learning, neither mastering, neither nothing.</p>\n    <h2>Some pieces of advice </h2>\n    <p>Celebrate your success and repeat </p>\n    <p>90 minutes is the optimal duration to\n    sleep</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> The Power of an Agile Mindset </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>Kaizen</p>\n    <p>Am I fixing or improving? </p>\n    <p>Belief about yourself affects other's believes.</p>\n    <p>We should always look at our team as a whole. Because\n    if we look at each other as unhealthy rivals, we could end up fighting between\n    us. </p>\n    <p>We have to be aware of how we congratulate or correct\n    someone. </p>\n    <p>The words chosen could affect the performance and\n    mindset; even if we said with good intentions, it could impact negatively.</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Linda Rising on Collaboration, Bonobos and The Brain </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>Most of the decisions making go on unconsciously. It seems,\n    even if we start an idea on the logical part, in the end, we choose whatever\n    our unconscious choose. However, we could help us by gathering data and\n    analyzing them. Because once our logical part starts something, our unconscious\n    will take that as a root and evolve the idea until a decision. So, it is a good\n    practice to gather and analyze data, alone or in a team. It works since the\n    members will work better if they understand the reasons for the actions.</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> GOTO 2016 • Who do You Trust? Beware of Your Brain • Linda Rising </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>We have to be aware about how our unconscious labelers\n    works with us, because even if we can’t get rid of it, we could be conscious\n    about it and avoid to be mean with others. </p>\n    <p>Categories depends on context.</p>\n    <p>Working together could helps to get closer to others.</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Everything is a Remix Remastered (2015 HD) </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>Creation requires influence</p>\n        <img src=\"assets/Week 3/Genre.png\">\n        <img src=\"assets/Week 3/SUBGENRE.png\">\n        <img src=\"assets/Week 3/ELEMENTS.png\">\n        <img src=\"assets/Week 3/THE BASIC ELEMENTS.png\">\n    <p>Copy is a way of learn</p>\n    \n    </mat-expansion-panel>\n</mat-accordion>","import { Component, OnInit } from '@angular/core';\nimport { Month1Component } from './month1/month1.component';\n\n@Component({\n  selector: 'app-monthly',\n  templateUrl: './monthly.component.html',\n  styleUrls: ['./monthly.component.scss']\n})\nexport class MothlyComponent implements OnInit {\n  months = [\n    {\n      \"name\":\"Month 1\",\n      \"description\":\"From March 29th to May 3rd\",\n      \"component\":Month1Component\n    }\n  ];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-accordion>\n  <h1></h1>\n  <mat-expansion-panel hideToggle *ngFor=\"let month of months\" class=\"exP\">\n    <mat-expansion-panel-header>\n      <mat-panel-title style=\"color: white;\">{{month.name}}</mat-panel-title>\n      <mat-panel-description style=\"color: white;\">{{month.description}}</mat-panel-description>\n    </mat-expansion-panel-header>\n    <ng-container *ngComponentOutlet=\"month.component\"></ng-container>\n  </mat-expansion-panel>  \n</mat-accordion>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\" fxLayoutAlign=\"center center\">\n    <span>\n      <img src=\"assets/favicon.png\" height=30 width=41>\n    </span>\n    <span>&nbsp;</span>\n    <span>Yasuo's Journal</span>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { Book1Component } from './book1/book1.component';\nimport { MatDialog} from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { Book2Component } from './book2/book2.component';\n\n@Component({\n  selector: 'app-month1',\n  templateUrl: './month1.component.html',\n  styleUrls: ['./month1.component.scss']\n})\nexport class Month1Component implements OnInit {\n  books =\n    [{\n      \"title\":\"Code: The Hidden Language of Computer Hardware & Software\",\n      \"author\":\"Charles Petzold\",\n      \"imageA\":\"assets/Month 1/Charles_petzold.png\",\n      \"imageB\":\"assets/Month 1/Code.jpg\",\n      \"page\":Book1Component\n    },{\n      \"title\":\"Make It Stick\",\n      \"author\":\"Peter C. Brow, Henry L. Roediger III, Marc A. Mc.Daniel\",\n      \"imageA\":\"assets/Month 1/MSA.jpg\",\n      \"imageB\":\"assets/Month 1/MakeStick.jpg\",\n      \"page\":Book2Component\n    }];\n  constructor(private dialog:MatDialog) { }\n\n  ngOnInit(): void {\n  }\n  openBook(book: ComponentType<unknown>){\n    this.dialog.open(book,{width:\"100%\",height:\"100%\"})\n  }\n}\n","<div fxLayout=\"row\" fxLayoutGap=\"15px\" cols=\"2\">\n  <mat-card class=\"example-card\" fxFlex=\"50%\" \n  color=\"accent\" *ngFor=\"let book of books\"\n  (click)=\"openBook(book.page)\">\n      <mat-card-header>\n        <div mat-card-avatar class=\"book-header-image\" \n        style=\"background-image: url('{{book.imageA}}')\">\n        </div>\n        <mat-card-title>{{book.title}}</mat-card-title>\n        <mat-card-subtitle>{{book.author}}</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content class=\"book-card\">\n        <img mat-card-image src={{book.imageB}} \n        alt=\"{{book.title}}\" \n        class=\"book-image\">\n      </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-week4',\n  templateUrl: './week4.component.html',\n  styleUrls: ['./week4.component.scss']\n})\nexport class Week4Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p></p>\n<p>This week was interesting. Here we see some videos related to artificial intelligence and quantum computing. We explored the TensorFlow and Scikit libraries and learned how quantum computing could help with AI development and simulations.</p>\n<p>On the other hand, talking about soft skills. I was very impressed with how to design new products or ideas. Something that almost everybody forgets relies on the fact that high-impact innovations are motivated by the willingness to help others rather than money. The Moonshot strategy is an example of this is when you are working on though projects, it is not money or profits that keeps you there, it is the desire that your work can change the world. </p>\n<p></p>\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Machine Learning Recipes with Josh Gordon </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P></P>\n    <P><B>Supervised learning</B></P>\n    <P>Create a classifier by finding patterns in examples</P>\n    <P><B>Types of classifiers</B></P>\n    <P>Artificial neural networks</P>\n    <P>Support Vector Machine</P>\n    <P>Lions</P>\n    <P>Tigers</P>\n    <P>Bears</P>\n    <P><B>Testing Data</B></P>\n    <P>Examples\n    used to “test” the classifier accuracy</P>\n    <P>Not\n    part of the training data</P>\n    <P><B>Featuring\n    engineering</B></P>\n    <P>Featuring\n    engineering the most important part of a ML here you choose which\n    data will represent your model</P>\n    <P><B>Binary\n    classification</B></P>\n    <P>Though\n    test</P>\n    <P>Avoid\n    redundant features</P>\n    <P>Features\n    should be easy to understand</P>\n    <P>Simpler\n    relationships are easier to learn</P>\n    <P>Ideal\n    features are:</P>\n    <P>Informative</P>\n    <P>Independent</P>\n    <P>Simple</P>\n    <P>Inception\n    - Google Computer Vision model</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Carl Sagan's Pale Blue Dot OFFICIAL </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>This\n    video was very Copernican, reminding us that we are nothing compared\n    with the universe, but at the same time remembering us that we are\n    part of the same universe.\n    </P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Bret Victor - The Future of Programming </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Technology\n    change quickly, people not</P>\n    <P>\n    </P>\n    <P>Coding:\n    Direct manipulation of data</P>\n    <P>Procedures:\n    Goals and constraints</P>\n    <P>Text\n    dump: Spatial representations</P>\n    <P>Sequential:\n    Concurrent</P>\n    <P>\n    </P>\n    <P>API</P>\n    <P>\n    </P>\n    <P>To\n    avoid get stuck in one technology you should ask yourself what are\n    you doing? Do you know what are you doing?</P>\n    <P>\n    </P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Moonshot Thinking from Astro Teller </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>It\n    is better to set inspiring goals even if they are risky because even\n    if you fail you grow up. That enables you (your organization) to\n    reach best scenarios \n    </P>\n    <P>Fail\n    fast, that helps you to find good idea or strategies.</P>\n    <P>Avoid\n    thinking on costs focus on doing and improving, being greedy could\n    take down your ideas.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Fast Company Exclusive: Inside Google X </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Point\nto the moon, make the world at least ten times better</P>\n<P>The\nprocess of innovation is expensive and slow, so is better to fail\nquickly to avoid getting stuck into something \n</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> La mejor presentación de tu vida </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>We\n    have to focus our attention on what we are doing instead of what they\n    think.</P>\n    <P>If\n    we success in doing people think or feel we could convince them to\n    something for us</P>\n    <P>We\n    should try to make people think at the optimal point to maintain\n    their attention and good willing.</P>\n    <P>Whatever\n    you are presenting should be:</P>\n    <UL>\n        <LI><P>Give\n        something useful and new</P>\n        <LI><P>Simplify,\n        we tend to take our decisions based on the ease instead of the\n        quantity of arguments  \n        </P>\n        <LI><P>Find\n        an order to show your ideas. \n        </P>\n        <UL>\n            <LI><P>Choose\n            if your story will be from general to particular (long talks) or\n            from particular to general (short talks)</P>\n            <LI><P>Make\n            chunks ordered of information. Choose a structure for your ideas.</P>\n        </UL>\n        <LI><P>Try\n        to find relationship with something that your audience knows and\n        make a kind of metaphor. Use association of ideas \n        </P>\n        <LI><P>Use\n        the 3S strategy</P>\n        <UL>\n            <LI><P>Say\n            what you are going ro say</P>\n            <LI><P>Say\n            it</P>\n            <LI><P>Say\n            what you said</P>\n        </UL>\n        <LI><P>Foment\n        participation</P>\n        <UL>\n            <LI><P>Make\n            open questions, avoid specific response ones</P>\n            <LI><P>If\n            your audience is big, choose someone to participate, the bigger\n            your audience the lower the probability that someone will arise by\n            themself \n            </P>\n            <LI><P>Congratulates\n            the participation</P>\n            <LI><P>Avoid\n            yes, but… it is better yes, and additionally</P>\n        </UL>\n        <LI><P>Use\n        objects, and work on your props, avoid long text, control the\n        showing rhythm</P>\n        <LI><P>Control\n        the tone and emotion rhythm</P>\n    </UL>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> What Got You here Won't Get You There | Marshall Goldsmith | Talks at Google </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <UL>\n        <LI><P>We\n        have to learn to loose \n        </P>\n        <LI><P>help\n        more, judge less</P>\n        <LI><P>Feedforward</P>\n        <UL>\n            <LI><P>Forget\n            the past</P>\n        </UL>\n        <LI><P>If\n        something don’t work don’t do it.</P>\n        <LI><P>Don’t\n        try to feel better than others</P>\n        </UL>\n    <P><B>Developing\n    yourself as a leader and partner</B></P>\n    <UL>\n        <LI><P>Ask</P>\n        <LI><P>Listen</P>\n        <LI><P>Think</P>\n        <LI><P>Thank</P>\n        <LI><P>Respond</P>\n        <LI><P>Involve</P>\n        <LI><P>Change</P>\n        <LI><P>Follow-up\n        </P>\n    </UL>\n    <P>Friends\n    and family</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Quantum videos </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <p>These videos were kind of complicated. However, the main idea behind quantum computing relies on several principles, just to mention one, the quantum entanglement that allows the simultaneous change of several nodes. That enhances velocity because instead of having procedural calculations, you could just finish them with just one shot. Additionally, given how things work on quantum mechanics (the uncertainty principle), it allows you to test several states again once. Those characteristics make quantum computing a good tool for optimization and searching problems which could help a lot with AI development and simulations.\n    </p>\n    <div class=\"images\" >\n        <img src=\"assets/Week 4/Logic gates.png\" alt=\"Logic gates\">\n        <img src=\"assets/Week 4/Quantum Computer.png\" alt=\"Quantum ComputerLogic gates\">\n    </div>\n    \n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Bret Victor - Inventing on Principle </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>how\ndo you represent data is very important, the most important concept\nbehind invention is how it impacts and enhance people</P>\n<P>Identify</P>\n<P>Experience\na lot of things</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Version Control (Git) </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Commits\nin Git are immutable. This doesn’t mean that mistakes can’t be\ncorrected, however; it’s just that “edits” to the commit\nhistory are actually creating entirely new commits, and references\n(see below) are updated to point to the new ones.</P>\n<div class=\"images\"><img src=\"assets/Week 4/Objects and content-addressing.png\"></div>\n<P>\n</P>\n<P>Now,\nall snapshots can be identified by their ShA-1 hash. That’s\ninconvenient, because humans aren’t good at remembering strings of\n40 hexadecimal characters.</P>\n<P>Git’s\nsolution to this problem is human-readable names for ShA-1 hashes,\ncalled “references”. References are pointers to commits.</P>\n<P><B>Repositories</B></P>\n<P>Finally,\nwe can define what (roughly) is a Git <I>repository</I>:\nit is the data objects and references.</P>\n<P><B>Staging\narea</B></P>\n<P>Git\naccommodates such scenarios by allowing you to specify which\nmodifications should be included in the next snapshot through a\nmechanism called the “staging area”.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Editors (Vim) </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Vim\nis the most popular command-line-based editor.</P>\n<P><B>Modal\nediting</B></P>\n<P>Vim’s\ndesign is based on the idea that a lot of programmer time is spent\nreading, navigating, and making small edits, as opposed to writing\nlong streams of text. For this reason, Vim has multiple operating\nmodes.</P>\n<UL>\n\t<LI><P><B>Normal</B>:\n\tfor moving around a file and making edits</P>\n\t<LI><P><B>Insert</B>:\n\tfor inserting text</P>\n\t<LI><P><B>Replace</B>:\n\tfor replacing text</P>\n\t<LI><P><B>Visual</B>\n\t(plain, line, or block): for selecting blocks of text</P>\n\t<LI><P><B>Command-line</B>:\n\tfor running a command</P>\n</UL>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Java Build Tools for Dependency Management </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>They\nwere builded to become the process of using libraries easier</P>\n<P><B>how\nto Define Dependencies</B></P>\n<P>In\nthe examples below, we will show you how to add a dependency for the\nopen-source library Guava from Google, which is available from Maven\nCentral. To start, you need to know its group-id (com.google.guava),\nits artifact-id (guava), and which version of the library you’re\ninterested in (as of this writing, the latest version is “15.0”)</P>\n<P>\n</P>\n<div class=\"images\"><img src=\"assets/Week 4/How to Define Dependencies in Maven.png\"></div>\n<div class=\"images\"><img src=\"assets/Week 4/How to Define Dependencies in Gradle.png\"></div>\n<P>\n</P>\n<P><B>Version\nranges</B></P>\n<P>Instead\nof just a single version number, you can also specify a range, using\na notation very similar to how you would define an interval in\nmathematics: parenthesis ( ) work as exclusive markers and brackets [\n] as inclusive markers. Using a range allows the tool to pick a\nsuitable version for the build. Continuing the example with Guava, if\nyou know that any version between 12.0 and up to 15.0 (excluded)\nwould work, you could define it as “[12.0,15.0)”. You can also\nleave it open-ended like “[12.0,)”, which adds a requirement for\nany version from 12.0 and up, similarly “(,12.0]” would be any\nversion up to and including 12.0. Or if you want anything higher than\n12.0, except for version 13.0, you could specify\n“[12.0,13.0),(13.0,)” as the version.</P>\n<P>Besides\nranges and specific versions, dependencies can also be resolved using\ndynamic versions by using the keywords ‘LATEST’ or ‘RELEASE’\ninstead of the version number. \n</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Mocks Aren't Stubs </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>'Mock\nObjects’: special case objects that mimic real objects for testing.</P>\n<P><B>Regular\nTests</B></P>\n<P>xUnit\ntests follow a typical four phase sequence: setup, exercise, verify,\nteardown. \n</P>\n<P>\n</P>\n<P>In\nthis case the setup phase is done partly in the setUp method (setting\nup the warehouse) and partly in the test method (setting up the\norder). The call to order.fill is the exercise phase. This is where\nthe object is prodded to do the thing that we want to test. The\nassert statements are then the verification stage, checking to see if\nthe exercised method carried out its task correctly. In this case\nthere's no explicit teardown phase, the garbage collector does this\nfor us implicitly.</P>\n<P>\n</P>\n<P>This\nstyle of testing uses <B>state\nverification</B>:\nwhich means that we determine whether the exercised method worked\ncorrectly by examining the state of the order and its collaborators\nafter the method was exercised. As we'll see, mock objects enable a\ndifferent approach to verification.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Tests with Mock Objects </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>To\nbegin with, the setup phase is very different. For a start it's\ndivided into two parts: data and expectations. The data part sets up\nthe objects we are interested in working with, in that sense it's\nsimilar to the traditional setup. The difference is in the objects\nthat are created. The SUT is the same - an order. however the\ncollaborator isn't a warehouse object, instead it's a mock warehouse\n- technically an instance of the class Mock.</P>\n<P>\n</P>\n<P>The\nsecond part of the setup creates expectations on the mock object.The\nexpectations indicate which methods should be called on the mocks\nwhen the SUT is exercised.</P>\n<P>\n</P>\n<P>Once\nall the expectations are in place I exercise the SUT. After the\nexercise I then do verification, which has two aspects. I run asserts\nagainst the SUT - much as before. however I also verify the mocks -\nchecking that they were called according to their expectations.</P>\n<P>\n</P>\n<P>Mocks\nuse <B>behavior\nverification</B>,\nwhere we instead check to see if the order made the correct calls on\nthe warehouse. We do this check by telling the mock what to expect\nduring setup and asking the mock to verify itself during\nverification. Only the order is checked using asserts, and if the\nmethod doesn't change the state of the order there's no asserts at\nall.</P>\n<P>\n</P>\n<h2 >The Difference Between Mocks\nand Stubs</h2>\n<P>Using\nmocks is one way to not use a real warehouse in the test, but there\nare other forms of unreal objects used in testing like this.</P>\n<P>\n</P>\n<P>Test\nDouble: the generic term for any kind of pretend object used in place\nof a real object for testing purposes.</P>\n<P>\n</P>\n<P>Types\nof double:</P>\n<UL>\n\t<LI><P><B>Dummy</B>\n\tobjects are passed around but never actually used. Usually they are\n\tjust used to fill parameter lists.</P>\n\t<LI><P><B>Fake</B>\n\tobjects actually have working implementations, but usually take some\n\tshortcut which makes them not suitable for production.</P>\n\t<LI><P><B>Stubs</B>\n\tprovide canned answers to calls made during the test, usually not\n\tresponding at all to anything outside what's programmed in for the\n\ttest.</P>\n\t<LI><P><B>Spies</B>\n\tare stubs that also record some information based on how they were\n\tcalled. One form of this might be an email service that records how\n\tmany messages it was sent.</P>\n\t<LI><P><B>Mocks</B>\n\tobjects pre-programmed with expectations which form a specification\n\tof the calls they are expected to receive.</P>\n</UL>\n<P>Of\nthese kinds of doubles, only mocks insist upon behavior verification.\nThe other doubles can, and usually do, use state verification. Mocks\nactually do behave like other doubles during the exercise phase, as\nthey need to make the SUT believe it's talking with its real\ncollaborators - but mocks differ in the setup and the verification\nphases.</P>\n<P>\n</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Xunit </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>It was inspiring see how something that born as a small project done without bigger purposes ended as an industry standard</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> UnitTest </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Firstly\nthere is a notion that unit tests are low-level, focusing on a small\npart of the software system. Secondly unit tests are usually written\nthese days by the programmers themselves using their regular tools -\nthe only difference being the use of some sort of unit testing\nframework [1]. Thirdly unit tests are expected to be significantly\nfaster than other kinds of tests.</P>\n<P>\n</P>\n<P>Object-oriented\ndesign tends to treat a class as the unit, procedural or functional\napproaches might consider a single function as a unit. But really\nit's a situational thing - the team decides what makes sense to be a\nunit for the purposes of their understanding of the system and its\ntesting. Although I start with the notion of the unit being a class,\nI often take a bunch of closely related classes and treat them as a\nsingle unit. Rarely I might take a subset of methods in a class as a\nunit. however you define it doesn't really matter.</P>\n<P>\n</P>\n<div class=\"images\"><img src=\"assets/Week 4/Solitary Tests.png\"></div>\n<P>\n</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Test Driven development </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>\n</P>\n<div class=\"images\"><img src=\"assets/Week 4/Test fails.png\"></div>\n<P>TDD\ncannot automatically fix algorithms; neither can any other technique.\nWhere rigorous testing helps is ensuring that the details of your\nalgorithm remain the same even if you refactor or add features. \n</P>\n<P>This\nis a <I><B>good</B></I>\nthing; it makes you stop, revert your change, and try again.</P>\n<P>\n</P>\n\n</mat-expansion-panel>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef} from '@angular/material/dialog';\n@Component({\n  selector: 'app-book1',\n  templateUrl: './book1.component.html',\n  styleUrls: ['./book1.component.scss']\n})\nexport class Book1Component implements OnInit {\n\n  constructor(public dialogRef:MatDialogRef<Book1Component>) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"accent\"> \n    <mat-toolbar-row>\n        Code: The Hidden Language of Computer Hardware & Software\n        <span class=\"flex-spacer\"></span>\n        <button mat-button mat-dialog-close>&times;</button>\n    </mat-toolbar-row>\n    <mat-toolbar-row>\n        Summary By Yasuo Maidana\n    </mat-toolbar-row>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}