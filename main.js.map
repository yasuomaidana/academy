{"version":3,"sources":["./src/app/menu/monthly/month1/resume/resume.component.ts","./src/app/menu/monthly/month1/resume/resume.component.html","./src/app/menu/weekly/weekly.component.ts","./src/app/menu/weekly/weekly.component.html","./src/app/menu/weekly/week2/week2.component.ts","./src/app/menu/weekly/week2/week2.component.html","./src/environments/environment.ts","./src/app/menu/monthly/month1/book2/book2.component.ts","./src/app/menu/monthly/month1/book2/book2.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/app.module.ts","./src/app/menu/weekly/week1/week1.component.ts","./src/app/menu/weekly/week1/week1.component.html","./src/app/menu/weekly/week3/week3.component.ts","./src/app/menu/weekly/week3/week3.component.html","./src/app/menu/monthly/monthly.component.ts","./src/app/menu/monthly/monthly.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/menu/monthly/month1/month1.component.ts","./src/app/menu/monthly/month1/month1.component.html","./src/app/menu/weekly/week4/week4.component.ts","./src/app/menu/weekly/week4/week4.component.html","./src/app/menu/weekly/week5/week5.component.ts","./src/app/menu/weekly/week5/week5.component.html","./src/app/menu/monthly/month1/book1/book1.component.ts","./src/app/menu/monthly/month1/book1/book1.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.scss']\n})\nexport class ResumeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"accent\"> \n    <mat-toolbar-row>\n        What did I learn?\n        <span class=\"flex-spacer\"></span>\n        <button mat-button mat-dialog-close>&times;</button>\n    </mat-toolbar-row>\n    <mat-toolbar-row>\n        By Yasuo Maidana\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<p>This month was very fruitful. I learned several things associated with learning strategies, how to relate with others, and some kind of kinds of stuff related to software development as testing.</p>\n<p>The first week I read and saw some content related to time administration and personal growth. Here I learned how to building and forgetting habits and the importance of accepting you can grow up more.</p>\n<p>The second week I learned about intuition and how to use it. I also learned how to practice my creativity. Additionally, I meditated about my automatic mode.</p>\n<p>In the third week, I learned how some compressors work to how to work better with others. If I should summarize this week in three words, I'll choose remix, kaizen, and collaboration. It is marvelous how the combination of different disciplines ends up with a totally new concept. Furthermore, there was material related to tolerance and how to enhance empathy.</p>\n<p>The fourth week was related to artificial intelligence and quantum computing. We explored some libraries and learned how quantum computing could help with AI development and simulations. Moreover, I watched videos related to motivation and moonshot strategy.</p>\n<p>The last week of this month, I studied pretotyping and testing practices.</p>\n<p>Now, talking about the books read this month. One of them was about the computer's history and the other about some effective study strategies.</p>","import { Component, OnInit } from '@angular/core';\nimport { Week1Component } from './week1/week1.component'\nimport { Week2Component } from './week2/week2.component'\nimport { Week3Component } from './week3/week3.component';\nimport { Week4Component } from './week4/week4.component';\nimport { Week5Component } from './week5/week5.component';\n@Component({\n  selector: 'app-weekly',\n  templateUrl: './weekly.component.html',\n  styleUrls: ['./weekly.component.scss']\n})\nexport class WeeklyComponent implements OnInit {\n  weeks = [\n    {\n      \"name\":\"Week 1\",\n      \"description\":\"From March 29th to April 2nd\",\n      \"component\":Week1Component\n    },\n    {\n      \"name\":\"Week 2\",\n      \"description\":\"From April 5th to April 9th\",\n      \"component\":Week2Component\n    },\n    {\n      \"name\":\"Week 3\",\n      \"description\":\"From April 12th to April 16th\",\n      \"component\":Week3Component\n    },\n    {\n      \"name\":\"Week 4\",\n      \"description\":\"From April 19th to April 23th\",\n      \"component\":Week4Component\n    },\n    {\n      \"name\":\"Week 5\",\n      \"description\":\"From April 26th to April 30th\",\n      \"component\":Week5Component\n    }\n  ];\n  constructor() {\n   }\n\n  ngOnInit(): void {\n    console.log();\n  }\n\n}\n","<mat-accordion>\n  <mat-expansion-panel hideToggle *ngFor=\"let week of weeks\" class=\"exP\">\n    <mat-expansion-panel-header>\n      <mat-panel-title style=\"color: white;\">{{week.name}}</mat-panel-title>\n      <mat-panel-description style=\"color: white;\">{{week.description}}</mat-panel-description>\n    </mat-expansion-panel-header>\n    <ng-container *ngComponentOutlet=\"week.component\"></ng-container>\n  </mat-expansion-panel>\n</mat-accordion>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-week2',\n  templateUrl: './week2.component.html',\n  styleUrls: ['./week2.component.scss']\n})\nexport class Week2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    I could summarize this week reading and videos enlisting the following points: \n    <ul>\n        <li>It is good to have your intuition, which is convenient in multiples situations. However, you must verify your intuition, treat it as a starting point rather than the answer.</li>\n        <li>You can't say you solved a problem if you did not identify it.</li>\n        <li>The more united an organization is, the stronger it becomes.</li>\n        <li>Creativity means a continued activity. You have to build it day by day and record it. </li>\n        <li>The faster you hands-on, the quicker your idea will evolve.</li>\n        <li>Your effort must be focused on stared problems. Optimization and perfection are overrated. The best products and services are not perfect, but they exist and work.</li>\n        <li>Sometimes, we are living in automatic mode, which is convenient for some aspects of life. However, you only can really enjoy the things you are conscious of. Avoid automatic mode in the core aspects of your life.</li>\n        <li>If you want to master something, you should:\n            <ul>\n                <li>practice as much as you can</li>\n                <li>You should choose a topic to focus on. For the related ones, do a library of examples. Mastering something takes a lot of time, and life is short.</li>\n                <li>Console commands are helpful for a lot of processes.</li>\n            </ul>\n        </li>\n    </ul>\n</div>\n<mat-accordion>\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>The scientific method</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h2>How to go through the process? </h2>\n        <p>When you are in charge, it is relevant to know the entire process of whatever you are doing. Because that way, you could participate in any stage and understand the value that others provide.</p>\n        <p>Sometimes, it is better to do something partially right than not do anything at all.</p>\n        <h2>Journaling</h2>\n        <p>It helps you to keep track of your process and to consult later.</p>\n        <h3>Important journal questions</h3>\n        <ul>\n            <li>What are you\n                <ul>\n                    <li>Thinking?</li>\n                    <li>Doing?</li>\n                </ul>\n            </li>\n            <li>What do you want to \n                <ul>\n                    <li>Do?</li>\n                    <li>Know?</li>\n                </ul>\n            </li>\n            <li>What did you discover?</li>\n        </ul>\n        <h2>Problem discovery</h2>\n        <p>This process is about discovering the components of a problem, their manifestations, and understanding their causes and effects.</p> \n        <h2>Observation </h2>\n        <p>You must avoid taking what you know for granted. First, observe the system, and try to understand it.</p>\n        <h2>Data gathering</h2>\n        <p>Try to identify cause-effect relationships and then gather information about them.</p>\n        <h2>Data analysis</h2> \n        <p>Try to use the data to prove your ideas wrong or right. You must analyze data, even if you think you understand the problem.</p>\n        <h2>Hypothesis generation</h2> \n        <p>Your ideas should be written down in a sentence that explains what is going on.</p>\n        <p>You could use the Taguchi diagram to externalize and organize ideas.</p>\n        <h2>Experimental design</h2> \n        <p>Experimental design is a methodology that helps you be efficient and allows you to have a degree of reliability on the results you get.</p>\n        <h2>Tests</h2> \n        <p>These are a set of protocols that anyone can use to replicate your observations. They are the proof of your conclusion.</p>\n        <h2>Problem definition</h2> \n        <p>You should define your problem in a single simple sentence. However, you could have several. Sometimes, the nature of the problem guides you to multiples phenomena.</p>\n        <h2>Definition</h2> \n        <p>The definition should be a single sentence that explains the problem. It must have coherence with your data and work.</p>\n        <h2>Constraints</h2> \n        <p>Make sure to list all the conditions and their importance. This will allows others to replicate your work.</p>\n        <h2>Search for solution </h2> \n        <h2>Research</h2> \n        <p>Start by looking at what others have done. Then, if nobody has solved your hypothesis, you could start yours. The advantage of doing this way is that you get the wise of others.</p>\n        <h2>Scientific papers</h2> \n        <p>The standard to share discoveries is the scientific paper. They show the methodology followed, the results, and conclusions.</p>\n        <h2>Brainstorming </h2> \n        <p>Think about possibilities and write them. It does not matter if those do not make sense at all.</p>\n        <h2>Modeling</h2> \n        <p>Discard everything that does not work with the problem definition</p>\n        <h2>Prototyping</h2> \n        <p>It is a simplified system that proves if the component can be built.</p>\n        <h2>Specification</h2> \n        <p>It is the guide with which you build the solution.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>What are the most profound life lessons from Stanford Professor John Ousterhout?</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <ul>\n            <li>We should focus on simplicity and quality rather than speed or performance. Most computers can deal with many applications.</li>\n            <li>Only think on optimize when it is required. It is hard to guess which part worth it.</li>\n            <li>Use your intuition to ask questions. Treat it as a hypothesis rather than the answer.</li>\n            <li>Most of the time is better to try something to understand a concept. It is recommended to use the cycle concept-fact-concept.</li>\n            <li>You could not say you solved a problem you have not identified. Sometimes, an error could be solved by coincidence. The error scenario was probably avoided. So if it presents again, the error will rise again. </li>\n            <li>The early you test your project, the quicker you will find its issues. Furthermore, you will minimize wasting effort on useless functions.</li>\n            <li>If you want to build credibility, be honest. It is ok to say I do not know or I made a mistake instead of trying to build a false image.</li>\n        </ul>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Scott Berkun: Creative thinking hacks</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>Creativity is a kind of work. You need to do something</p>\n        <p>The ideas are made of other ideas. If you got stuck, mix some ideas to get a new picture.</p>\n        <p>In inhibition, you have to be very aware of constraints. As you remove unnecessary assumptions, including fears, your solution becomes more creative.</p>\n        <p>You have to pay attention to your own, identify what works better for you. Commonly, physical activity helps you with creativity.</p>\n        <p>Persistence, things take time to get done.</p>\n        <h2>Hacks</h2>\n        <ul>\n            <li>Keep a journal. It is better if it is physical.</li>\n            <li>Escape: Ideas tends to show up when you are relaxed</li>    \n            <li>Steps of building an idea\n                <ul>\n                    <li>Understanding</li>\n                    <li>Incubation</li>\n                    <li>Elaboration</li>\n                </ul>\n            </li>\n            <li>Invert, solve/imagine the opposite problem/perspective from the one you are trying to solve.</li>\n            <li>Find a partner</li>\n            <li>Fail. Try your ideas</li>\n            <li>Switch modes\n                <ul>\n                    <li>Visually</li>\n                    <li>Verbally</li>\n                    <li>Audibly</li>\n                    <li>Physically</li>\n                </ul>\n            </li>\n            <li>Try to explain to others what you are doing. </li>\n            <li>You have to be aware of the culture and environment where you are working.</li>\n        </ul> \n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Jonathan Haidt: Religion, evolution, and the ecstasy of self-transcendence</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>It is significant to be united with others. The more united we are, the more solid we will be.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Autopilot Britain</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>Autopilot is a growing problem. It is becoming our default mode of operating, whereby we are sleepy walking into our choices.</p>\n        <h2>What is autopilot, and why is it a problem?</h2>\n        <p>It is a decision-making system to keep our brains from overloading.</p>\n        <h2>What are the cultural conditions that drive autopilot today?</h2>\n        <ul>\n            <li>We are too busy to notice what decisions we make</li>\n            <li>Tech makes us sleepwalk into our choices</li>\n            <li>We spend too much time comparing ourselves to ideals we can not live up to</li>\n        </ul>\n        <h2>Autopilot types</h2>\n        <ul>\n            <li>The players, those could not say no</li>\n            <li>The pacers, the busy ones</li>\n            <li>The passengers</li>\n        </ul>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Ideas are just a multiplier of execution</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <img src=\"assets/Week 1/ideas.png\">\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>How progress really happens</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>There is no change until someone stakes their reputation on doing something different. You can’t make change without power. So, you have to be conscious about what you want to do.</p>\n        <h2>Change</h2>\n        <p>We don’t like changes, some reasons are:</p>\n        <ul>\n            <li>It takes energy</li>\n            <li>It generates uncertain situations and risks</li>\n        </ul>\n        <h2>Tactics you should know</h2>\n        <ul>\n            <li>Talk about the problem you want to solve</li>\n            <li>Get consensus</li>\n            <li>Think about how much power you will need to make a change</li>\n            <li>Disseminate your idea</li>\n            <li>Look for people open to change (unhappier/discomforted ones)</li>\n            <li>Start with something small you can build and share to convince (pilot)</li>\n            <li>Motivate people</li>\n            <li>Cover your people</li>\n        </ul>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>How to Master Anything: PEAK by Anders Ericsson | Core Message</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <ul>\n            <li>Mental representations</li>\n            <li>Recreate experience</li>\n            <li>Make accurate predictions</li>\n            <li>Condense information</li>\n            <li>Effective practice</li>\n            <li>Purposeful practice</li>\n            <li>Specific goal</li>\n            <li>Intense focus</li>\n            <li>Immediate feedback</li>\n            <li>Freely make mistakes</li>\n            <li>Purpose practice + Mentor</li>\n        </ul>\n    </mat-expansion-panel>\n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Making Badass Developers - Kathy Sierra (Serious Pony)</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>Split your skills and master what you need. Practice always. Build a library of small examples.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>The missing semester: Course overview + the shell</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>Commands allow you to do several kinds of stuff some of them are not possible through graphical interfaces.</p>\n        <ul>\n            <li>\"echo\" with $PATH shows you the path variables, echo is a kind of print. </li>\n            <li>Absolute paths are paths that fully determine the location of a file. </li>\n            <li>\"PWD\" prints the current path you are in </li>\n            <li>cd changes directory </li>\n            <li>cd ~ returns you to the home directory  </li>\n            <li>cd - returns you to the previous directory you were </li>\n            <li>ls show you the files and directories  </li>\n            <li>Command + —help usually gives you help or small documentation about the command. </li>\n            <li>mv used to move/change name arguments original path, a new path </li>\n            <li>cp copy command </li>\n            <li>rm removes files, if you want to remove a directory with files is rm -r, to delete a directory is rmdir. To create a directory use mkdir </li>\n            <li>man gives the manual page of any program </li>\n            <li>ctr l allows you to clear the console </li>\n            <li>command < pathfileInput > pathFileOutput </li>\n            <li>command > pathFileOutput </li>\n            <li>cat print content of a file </li>\n            <li>>> used for append </li>\n            <li>| (pipe) takes the output of a program and use it as an argument of the next </li>\n            <li>tail -nX prints the nX last inputs </li>\n            <li>Example </li>\n            <li>ls -l | tail -n2 </li>\n            <li>curl --head --silent google.com </li>\n            <li>grep -i content-length </li>\n            <li>sudo su convert the shell into superuser </li>\n            <li>tee writes into a file </li>\n            <li>xdg-open fileNamePath opens a file (linux) </li>\n        </ul>\n    </mat-expansion-panel>\n</mat-accordion>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-book2',\n  templateUrl: './book2.component.html',\n  styleUrls: ['./book2.component.scss']\n})\nexport class Book2Component implements OnInit {\n\n  constructor(public dialogRef:MatDialogRef<Book2Component>) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"accent\"> \n    <mat-toolbar-row>\n        Make it Stick\n        <span class=\"flex-spacer\"></span>\n        <button mat-button mat-dialog-close>&times;</button>\n    </mat-toolbar-row>\n    <mat-toolbar-row>\n        Summary By Yasuo Maidana\n    </mat-toolbar-row>\n</mat-toolbar>\n<p>I strongly recommend taking the Coursera course Learning How to Learn. This book explains a lot of things covered in that course. However, I found Coursera more explicit. Nevertheless, it helps to reinforce. \n    Here, the authors explain why it is important to practice often and conscious while learning something. Additionally, they give you some tricks that could help you to take advantage of your brain behavior.</p>\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 1. Learning Is Misunderstood </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Learning:\nAcquiring knowledge and skills and having them readily available from\nmemory so you can make sense of future problems and opportunities.</P>\n<P>Useful,\nlearning requires memory, so what we’ve learned is still there\nlater when we need it.</P>\n<P>We\nneed to keep learning and remembering all our lives.</P>\n<P>Learning\nis deeper and more durable when it’s effortful.</P>\n<P>Learning\nthat’s easy is like writing in sand, here today and gone tomorrow.</P>\n<P>Retrieval\npractice— recalling facts or concepts or events from memory— is a\nmore effective learning strategy than review by rereading. \n</P>\n<P>While\nthe brain is not a muscle that gets stronger with exercise, the\nneural pathways that make up a body of learning do get stronger, when\nthe memory is retrieved and the learning is practiced.</P>\n<P>In\nvirtually all areas of learning, you build better mastery when you\nuse testing as a tool to identify and bring up your areas of\nweakness. All new learning requires a foundation of prior knowledge.</P>\n<P>Elaboration\nis the process of giving new material meaning by expressing it in\nyour own words and connecting it with what you already know.</P>\n<P>Putting\nnew knowledge into a larger context helps learning. \n</P>\n<P>People\nwho learn to extract the key ideas from new material and organize\nthem into a mental model and connect that model to prior knowledge\nshow an advantage in learning complex mastery. \n</P>\n<P>A\nmental model is a mental representation of some external reality.</P>\n<P>But\nevery time you learn something new, you change the brain— the\nresidue of your experiences is stored. \n</P>\n<P>Rereading\nhas three strikes against it. It is time consuming. It doesn’t\nresult in durable memory. And it often involves a kind of unwitting\nself- deception, as growing familiarity with the text comes to feel\nlike mastery of the content. \n</P>\n<P>Learning\nis stronger when it matters, when the abstract is made concrete and\npersonal.</P>\n<P>“The\nkey to learning something well is repetition; the more times you go\nover the material the better chance you have of storing it\npermanently.” This tactic might work when looking up a phone number\nand holding it in your mind while punching it into your phone, but it\ndoesn’t work for durable learning.</P>\n<P>Recall.\nMere repetition did not enhance learning. Subsequent, it makes sense\nto reread a text once if there’s been a meaningful lapse of time\nsince the first reading, but doing multiple readings in close\nsuccession is a time- consuming study strategy that yields negligible\nbenefits at the expense of much more effective strategies that take\nless time.</P>\n<P>However,\nrepeated reading provides the illusion of mastery of the underlying\nideas. Don’t be fooled. The fact that you can repeat the phrases in\na text or your lecture notes is no indication that you understand the\nsignificance of the precepts they describe, their application, or how\nthey relate to what you already know about the subject.</P>\n<P>Mastery\nrequires both the possession of ready knowledge and the conceptual\nunderstanding of how to use it.</P>\n<P>The\nact of retrieving learning from memory has two profound benefits.\nOne, it tells you what you know and don’t know, and therefore where\nto focus further study to improve the areas where you’re weak. Two,\nrecalling what you have learned causes your brain to reconsolidate\nthe memory, which strengthens its connections to what you already\nknow and makes it easier for you to recall in the future. In effect,\nretrieval— testing—interrupts forgetting. Consider</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 2. To Learn, Retrieve </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Reflection\nis a form of practice</P>\n<P>Then\nthere comes a time when you get into a tight situation and it’s no\nlonger a matter of thinking through the steps, it’s a matter of\nreflexively taking the correct action. \n</P>\n<P>The\npower of retrieval as a learning tool is known among psychologists as\nthe testing effect. In memory, Aristotle wrote: “exercise in\nrepeatedly recalling a thing strengthens the memory.” \n</P>\n<P>To\nbe most effective, retrieval must be repeated again and again, in\nspaced out sessions so that the recall, rather than becoming a\nmindless recitation, requires some cognitive effort. \n</P>\n<P>Repeated\nrecall appears to help memory consolidate into a cohesive\nrepresentation in the brain and to strengthen and multiply the neural\nroutes by which the knowledge can later be retrieved. In repeated\nretrieval can so embed knowledge and skills that they become\nreflexive: the brain acts before the mind has time to decide</P>\n<P>Researchers\nfound that massed studying (cramming) leads to higher scores on an\nimmediate test but results in faster forgetting compared to\npracticing retrieval. \n</P>\n<P>Thus,\nand in agreement with later research, multiple sessions of retrieval\npractice are generally better than one, especially if the test\nsessions are spaced out.</P>\n<P>When\nretrieval practice is spaced, allowing some forgetting to occur\nbetween tests, it leads to stronger long-term retention than when it\nis massed.</P>\n<P>The\nsimple act of exposing them to the material in the quizzes was\nresponsible for the superior learning, not the retrieval practice. \n</P>\n<P>Studies\nshow that giving feedback strengthens retention more than testing\nalone does, and, interestingly, some evidence shows that delaying the\nfeedback briefly produces better long-term learning than immediate\nfeedback. \n</P>\n<P>In\nmotor learning, trial and error with delayed feedback is a more\nawkward but effective way of acquiring a skill than trial and\ncorrection through immediate feedback; the learner quickly comes to\ndepend on the continued presence of the correction.</P>\n<P>Even\na single test in a class can produce a large</P>\n<P>Improvement\nin final exam scores, and gains in learning continue to increase as\nthe number of tests increases.14 Whichever theories science\neventually tells us are correct about how repeated retrieval\nstrengthens memory, empirical research shows us that the testing\neffect is real— that the act of retrieving a memory changes the\nmemory, making it easier to retrieve again later.</P>\n<P>Is\nrepeated testing simply a way to expedite rote learning? In fact,\nresearch indicates that testing, compared to rereading, can\nfacilitate better transfer of knowledge to new contexts and problems,\nand that it improves one’s ability to retain and retrieve material\nthat is related but not tested. Further research is needed on this\npoint, but it seems that retrieval practice can make information more\naccessible when it is needed in various contexts.</P>\n<P>After\na test, students spend more time restudying the material they missed,\nand they learn more from it than do their peers who restudy the\nmaterial without having been tested. Students whose study strategies\nemphasize rereading but not self-testing show over-confidence in\ntheir mastery. Students who have been quizzed have a double advantage\nover those who have not: a more accurate sense of what they know and\ndon’t know, and the strengthening of learning that accrues from\nretrieval practice.</P>\n<P>Frequent\nlow- stakes testing helps dial down test anxiety among students by\ndiversifying the consequences over a much larger sample.</P>\n<P>Practice\nat retrieving new knowledge or skill from memory is a potent tool for\nlearning and durable retention. This is true for anything the brain\nis asked to remember and call up again in the future— facts,\ncomplex concepts, problem-solving techniques, motor skills.</P>\n<P>Effortful\nretrieval makes for stronger learning and retention. \n</P>\n<P>When\nthe mind has to work, learning sticks better. The greater the effort\nto retrieve learning, provided that you succeed, the more that\nlearning is strengthened by retrieval. \n</P>\n<P>Repeated\nretrieval not only makes memories more durable but produces knowledge\nthat can be retrieved more readily, in more varied settings, and\napplied to a wider variety of problems.</P>\n<P>While\ncramming can produce better scores on an immediate exam, the\nadvantage quickly fades because there is much greater forgetting\nafter rereading than after retrieval practice.</P>\n<P>Simply\nincluding one test (retrieval practice) in a class yields a large\nimprovement in fi nal exam scores, and gains continue to increase as\nthe frequency of classroom testing increases.</P>\n<P>Self-testing\nmay be unappealing because it takes more effort than rereading, but\nas noted already, the greater the effort at retrieval, the more will\nbe retained.</P>\n<P>Giving\nstudents corrective feedback after tests keeps them from incorrectly\nretaining material they have misunderstood and produces better\nlearning of the correct answers.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 3. Mix Up Your Practice </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>\nDurable\nlearning, however, requires time for mental rehearsal and the other\nprocesses of consolidation.</P>\n<P>The\nincreased effort required to retrieve the learning after a little\nforgetting has the effect of retriggering consolidation, further\nstrengthening memory. We explore distances— improves your ability\nto transfer learning from one situation and apply it successfully to\nanother. You develop a broader understanding of the relationships\nbetween different conditions and the movements required to succeed in\nthem; you discern context better and develop a more flexible\n“movement vocabulary”— different movements for different\nsituations.</P>\n<P>Compared\nto massed practice, a significant advantage of interleaving and\nvariation is that they help us learn better how to assess context and\ndiscriminate between problems, selecting and applying the correct\nsolution from a range of possibilities.</P>\n<P>Several\nstudies have demonstrated the improved powers of discrimination to be\ngained through interleaved and varied practice.</P>\n<P>To\nparaphrase a conclusion from one of these studies, recall and\nrecognition require “factual knowledge,” considered to be a lower\nlevel of learning than “conceptual knowledge.”</P>\n<P>Conceptual\nknowledge requires an understanding of the interrelationships of the\nbasic elements within a larger structure that enable them to function\ntogether. Conceptual knowledge is required for classification. \n</P>\n<P>It’s\nnot just what you know, but how you practice what you know that\ndetermines how well the learning serves you later. \n</P>\n<P>The\nsimple act of spacing out study and practice in installments and\nallowing time to elapse between them makes both the learning and the\nmemory stronger, in effect building habit strength.</P>\n<P>Beware\nof the familiarity trap: the feeling that you know something and no\nlonger need to practice it.</P>\n<P>“Making\nthe brain work is actually what seems to make a difference—\nbringing in more complex networks, then using those circuits\nrepeatedly, which makes them more robust.”</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 4. Embrace Difficulties </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Demonstrate\nmastery. Testing is not only a powerful learning strategy; it is a\npotent reality check on the accuracy of your own judgment of what you\nknow how to do. When confidence is based on repeated performance,\ndemonstrated through testing that simulates real-world conditions,\nyou can lean into it. \n</P>\n<H2>How Learning Occurs</H2>\n<P>Encoding</P>\n<P>The\nbrain converts your perceptions into chemical and electrical changes\nthat form a mental representation of the patterns you’ve observed.\nThis process of converting sensory perceptions into meaningful\nrepresentations in the brain is still not perfectly understood. We\ncall the process encoding, and we call the new representations within\nthe brain memory traces. \n</P>\n<P>Consolidation</P>\n<P>The\nprocess of strengthening these mental representations for long-term\nmemory is called consolidation. New learning is labile: its meaning\nis not fully formed and therefore is easily altered. In\nconsolidation, the brain reorganizes and stabilizes the memory\ntraces. This may occur over several hours or longer and involves deep\nprocessing of the new material, during which scientists believe that\nthe brain replays or rehearses the learning, giving it meaning,\nfilling in blank spots, and making connections to past experiences\nand to other knowledge already stored in long-term memory. Prior\nknowledge is a prerequisite for making sense of new learning, and\nforming those connections is an important task of consolidation. As\nwe’ve noted, sleep seems to help memory consolidation, but in any\ncase, consolidation and transition of learning to long- term storage\noccurs over a period of time.</P>\n<P>Retrieval\nLearning</P>\n<P>Remembering,\nand forgetting work together in interesting ways. Durable, robust\nlearning requires that we do two things. First, as we recode and\nconsolidate new material from short-term memory into long-term\nmemory, we must anchor it there securely. Second, we must associate\nthe material with a diverse set of cues that will make us adept at\nrecalling the knowledge later. Having effective retrieval cues is an\naspect of learning that often goes overlooked. The task is more than\ncommitting knowledge to memory. Being able to retrieve it when we\nneed it is just as important.</P>\n<P>Knowledge,\nskills, and experiences that are vivid and hold significance, and\nthose that are periodically practiced, stay with us. If mind. Context\ncan unleash memories, as when the right key works to open an old\nlock. In other words, the more you’ve forgotten about a topic, the\nmore effective relearning will be in shaping your permanent\nknowledge.9</P>\n<P>Reconsolidating\n</P>\n<P>Memory\nEffortful recall of learning, as happens in spaced practice, requires\nthat you “reload” or reconstruct the components of the skill or\nmaterial anew from long-term memory rather than mindlessly repeating\nthem from short-term memory.10 During this focused, effortful recall,\nthe learning is made pliable again: the most salient aspects of it\nbecome clearer, and the consequent reconsolidation helps to reinforce\nmeaning, strengthen connections to prior knowledge, bolster the cues\nand retrieval routes for recalling it later, and weaken competing\nroutes.</P>\n<P>Spaced\npractice</P>\n<P>Allows\nsome forgetting to occur between sessions, strengthens both the\nlearning and the cues and routes for fast retrieval when that\nlearning is needed again, as when the pitcher tries to surprise the\nbatter with a curveball after pitching several fastballs. It is\nrequired to recall a memory or to execute a skill, provided that the\neffort succeeds, the more the act of recalling or executing benefits\nthe learning.</P>\n<P>Creating\nMental Models \n</P>\n<P>With\nenough effortful practice, a complex set of interrelated ideas or a\nsequence of motor skills fuse into a meaningful whole, forming a\nmental model somewhat akin to a “brain app”. \n</P>\n<P>Mental\nmodels \n</P>\n<P>Are\nforms of deeply entrenched and highly efficient skills (seeing and\nun-loading on a curveball) or knowledge structures (a memorized\nsequence of chess moves) that, like habits, can be adapted and\napplied in varied circumstances.</P>\n<P>Broadening\nMastery Retrieval practice that you perform at different times and in\ndifferent contexts and that interleaves different learning material\nhas the benefit of linking new associations to the material. This\nprocess builds interconnected networks of knowledge that bolster and\nsupport mastery of your fi eld. It also multiplies the cues for\nretrieving the knowledge, increasing the versatility with which you\ncan later apply it.</P>\n<P>Fostering\nConceptual Learning</P>\n<P>It’s\nthought that this heightened sensitivity to similarities and\ndifferences during interleaved practice leads to the encoding of more\ncomplex and nuanced representations of the study material— a better\nunderstanding of how specimens or types of problems are distinctive\nand why they call for a different interpretation or solution.</P>\n<P>Improving\nVersatility call transfer of learning, which is the ability to apply\nwhat you’ve learned in new settings.</P>\n<P>Priming\nthe Mind for Learning \n</P>\n<P>When\nyou’re asked to struggle with solving a problem before being shown\nhow to solve it, the subsequent solution is better learned and more\ndurably remembered.</P>\n<P>Other\nLearning Strategies \n</P>\n<P>Incorporates\ndesirable difficulties we usually think of interference as a\ndetriment to learning, but certain kinds of interference can produce\nlearning benefits, and the positive effects are sometimes surprising.</P>\n<P>The\nact of trying to answer a question or attempting to solve a problem\nrather than being presented with the information or the solution is\nknown as generation.</P>\n<P>In\ntesting, being required to supply an answer rather than select from\nmultiple choice options often provides stronger learning benefits.\nHaving</P>\n<P>The\nact of taking a few minutes to review what has been learned from an\nexperience</P>\n<P>and\nasking yourself questions is known as reflection.</P>\n<P>Reflection\ncan involve several cognitive activities we have discussed that lead\nto stronger learning. These include retrieval (recalling recently\nlearned knowledge to mind), elaboration (for example, connecting new\nknowledge to what you already know), and generation (for example,\nrephrasing key ideas in your own words or visualizing and mentally\nrehearsing what you might do differently next time).</P>\n<P>One\nform of reflection that is gaining currency in classroom settings is\ncalled “write to learn.”</P>\n<P>Even\nstrategies that are highly likely to result in errors, like asking\nsomeone to try to solve a problem before being shown how to do it,\nproduce stronger learning and retention of the correct information\nthan more passive learning strategies, provided there is corrective\nfeedback. Moreover, people who are taught that learning is a struggle\nthat often involves making errors will go on to exhibit a greater\npropensity to tackle tough challenges and will tend to see mistakes\nnot as failures but as lessons and turning points along the path to\nmastery.</P>\n<P>A\nfear of failure can poison learning by creating aversions to the\nkinds of experimentation and risk taking that characterize striving,\nor by diminishing performance under pressure, as in a test setting.</P>\n<P>It\nseems that a significant portion of their working memory capacity is\nexpended to monitor their performance leaving less working memory\ncapacity available to solve the problems posed by the test. “Working\nmemory” refers to the amount of information you can hold in mind\nwhile working through a problem, especially in the face of\ndistraction. Everyone’s working memory is severely limited, some\nmore than others, and larger working memory capacities correlate with\nhigher IQs.</P>\n<P>Not\nall difficulties in learning are desirable ones. Anxiety while taking\na test seems to represent an undesirable difficulty. \n</P>\n<P>To\nbe desirable, a difficulty must be something learners can overcome\nthrough increased effort.</P>\n<P>Learning\nis at least a three-step process: initial encoding of information is\nheld in short-term working memory before being consolidated into a\ncohesive representation of knowledge in long-term memory.\nConsolidation reorganizes and stabilizes memory traces, gives them\nmeaning, and makes connections to past experiences and to other\nknowledge already stored in long-term memory. Retrieval updates\nlearning and enables you to apply it when you need it.</P>\n<P>Learning\nalways builds on a store of prior knowledge. We interpret and\nremember events by building connections to what we already know.</P>\n<P>Long-term\nmemory capacity is virtually limitless: the more you know, the more\npossible connections you have for adding new knowledge.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 5. Avoid Illusions of Knowing </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Monitoring\nyour own thinking is what psychologists call metacognition</P>\n<P>\nLearning\nto be accurate self-observers helps us to stay out of blind alleys,\nmake good decisions, and reflect on how we might do better next time.\nAn important part of this skill is being sensitive to the ways we can\ndelude ourselves. One problem with poor judgment is that we usually\ndon’t know when we’ve got it.</P>\n<P>The\ntruth is that we’re all hardwired to make errors in judgment. Good\njudgment is a skill one must acquire, becoming an astute observer of\none’s own thinking and performance. We start at a disadvantage for\nseveral reasons. One is that when we’re incompetent, we tend to\noverestimate our competence and see little reason to change. Another\nis that, as humans, we are readily misled by illusions, cognitive\nbiases, and the stories we construct to explain the world around us\nand our place within it. To become more competent, or even expert, we\nmust learn to recognize competence when we see it in others, become\nmore accurate judges of what we ourselves know and don’t know,\nadopt learning strategies that get results, and find objective ways\nto track our progress.</P>\n<H2>Two Systems of Knowing</H2>\n<P>System\n1 (or the automatic system) is unconscious, intuitive, and immediate.\nIt draws on our senses and memories to size up a situation in the\nblink of an eye. It’s the running back dodging tackles in his dash\nfor the end zone. \n</P>\n<P>System\n2 (the controlled system) is our slower process of conscious analysis\nand reasoning. It’s the part of thinking that considers choices,\nmakes decisions, and exerts self-control.</P>\n<P>We\nalso use it to train System 1 to recognize and respond to par tic u\nlar situations that demand reflexive action. The</P>\n<P>System\n1 is automatic and deeply influential, but it is susceptible to\nillusion, and you depend on System 2 to help you manage yourself: by\nchecking your impulses, planning ahead, identifying choices, thinking\nthrough their implications, and staying in charge of your actions.\nWhen System 1 is powerful because it draws on our accumulated years\nof experience and our deep emotions. System 1 gives us the survival\nreflex in moments of danger, and the astonishing deftness earned\nthrough thousands of hours of deliberate practice in a chosen fi eld\nof expertise. In the interplay between Systems 1 and 2— your\ninstantaneous ability to size up a situation plays against your\ncapacity for skepticism and thoughtful analysis. Of Learning when to\ntrust your intuition and when to question it is a big part of how you\nimprove your competence in the world at large and in any fi eld where\nyou want to be expert.</P>\n<P>There\nare many ways that our System 1 and System 2 judgments can be led\nastray: perceptual illusions faulty narrative, distortions of memory,\nfailure to recognize when a new kind of problem requires a new kind\nof solution, and a variety of cognitive biases to which we’re\nprone.</P>\n<P>Our\nunderstanding of the world is shaped by a hunger for narrative that\nrises out of our discomfort with ambiguity and arbitrary events. When\nsurprising things happen, we search for an explanation. The urge to\nresolve ambiguity can be surprisingly potent, even when the subject\nis inconsequential. In</P>\n<P>We\nstrive to fi t the events of our lives into a cohesive story that\naccounts for our circumstances, the things that befall us, and the\nchoices we make. Each of us has a different narrative that has many\nthreads woven into it from our shared culture and experience of being\nhuman, as well as many distinct threads that explain the singular\nevents of one’s personal</P>\n<P>All\nthese experiences influence what comes to mind in a current situation\nand the narrative through which you make sense of it: Why</P>\n<P>The\nmemories we organize meaningfully become those that are better\nremembered. Narrative provides not only meaning but also a Avoid\nmental framework for imbuing future experiences and information with\nmeaning, in effect shaping new memories to fi t our established\nconstructs of the world and ourselves. \n</P>\n<P>Thus,\nthe narrative of memory becomes central to our intuitions regarding\nthe judgments we make and the actions we take.</P>\n<P>Memory\nis a reconstruction. We cannot remember every aspect of an event, so\nwe remember those elements that have greatest emotional significance\nfor us, and we fill in the gaps with details of our own that are\nconsistent with our narrative but may be wrong. People remember\nthings that were implied but not specifically stated. \n</P>\n<P>Imagination\ninflation refers to the tendency of people who, when asked to imagine\nan event vividly, will sometimes begin to believe, when asked about\nit later, that the event actually occurred. \n</P>\n<P>Another\ntype of memory illusion is one caused by suggestion, which may arise\nsimply in the way a question is asked.</P>\n<P>\nWhat\npsychologists call the curse of knowledge is our tendency to\nunderestimate how long it will take another person to learn something\nnew or perform a task that we have already mastered. \n</P>\n<P>\nHumans\nare predisposed to assume that others share their beliefs, a process\ncalled the false consensus effect.</P>\n<P>As\nyou get more expert in complex areas, your models in those areas grow\nmore complex, and the component steps that compose them fade into the\nbackground of memory</P>\n<P>Incompetent\npeople lack the skills to improve because they are unable to\ndistinguish between incompetence and competence.</P>\n<P>Their\nresearch showed that incompetent people overestimate their own\ncompetence and, failing to sense a mismatch between their performance\nand what is desirable, see no need to try to improve. \n</P>\n<P>Incompetent\npeople can be taught to raise their competence by learning the skills\nto judge their own performance more accurately, in short, to make\ntheir metacognition more accurate. \n</P>\n<P>Most\nimportant is to make frequent use of testing and retrieval practice\nto verify what you really do know versus what you think you know.</P>\n<P>In\nmany settings, your judgment and learning are calibrated by working\nalongside a more experienced partner</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 6. Get Beyond Learning Styles </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>People\nwho as a matter of habit extract underlying principles or rules from\nnew experiences are more successful learners than those who take\ntheir experiences at face value, failing to infer lessons that can be\napplied later in similar situations. \n</P>\n<P>Psychologists\ntoday generally accept that individuals possess at least two kinds of\nintelligence. Fluid intelligence is the ability to reason, see\nrelationships, think abstractly, and hold information in mind while\nworking on a problem; crystallized intelligence is one’s\naccumulated knowledge of the world and the procedures or mental\nmodels one has developed from past learning and experience. Together,\nthese two kinds of intelligence enable us to learn, reason, and solve\nproblems.</P>\n<UL>\n\t<LI><P>Logical-mathematical\n\tintelligence: ability to think critically, work with numbers and\n\tabstractions, and the like</P>\n\t<LI><P>Spatial\n\tintelligence: three-dimensional judgment and the ability to\n\tvisualize with the mind’s eye</P>\n\t<LI><P>Linguistic\n\tintelligence: ability to work with words and languages \n\t</P>\n\t<LI><P>Kinesthetic\n\tintelligence: physical dexterity and control of one’s body</P>\n\t<LI><P>Musical\n\tintelligence: sensitivity to sounds, rhythms, tones, and music;</P>\n\t<LI><P>Interpersonal\n\tintelligence: ability to “read” other people and work with them\n\teffectively</P>\n\t<LI><P>Intrapersonal\n\tintelligence: ability to understand one’s self and make accurate\n\tjudgments of one’s knowledge, abilities, and effectiveness</P>\n\t<LI><P>Naturalistic\n\tintelligence: the ability to discriminate and relate to one’s\n\tnatural surroundings (for example, the kinds of intelligence invoked\n\tby a gardener, hunter, or chef).</P>\n</UL>\n<P>Knowledge\nis not knowhow until you understand the underlying principles at work\nand can fi t them together into a structure larger than the sum of\nits parts. Knowhow is learning that enables you to go do.</P>\n<P>Be\nthe one in charge you have to suit up, get out the door, and find\nwhat you’re after. Mastery, especially of complex ideas, skills,\nand processes, is a quest. \n</P>\n<P>Embrace\nthe notion of successful intelligence. Go wide: don’t roost in a\npigeonhole of your preferred learning style but take command of your\nresources and tap all of your “intelligences” to master the\nknowledge or skill you want to possess.</P>\n<P>Adopt\nactive learning strategies like retrieval practice, spacing, and\ninterleaving. Be aggressive.</P>\n<P>Distill\nthe underlying principles; build the structure.</P>\n<P>Break\nyour idea or desired competency down into its component parts. If</P>\n<P>Describe\neach idea and recall the related points. Which</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 7. Increase Your Abilities </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Memory.\nMnemonic devices are mental tools that can take many forms but\ngenerally are used to help hold a large volume of new material in\nmemory, cued for ready recall.</P>\n<P>The\nneurons sprout microscopic branches, called axons, that reach out in\nsearch of tiny nubs on other neurons, called dendrites. When axon\nmeets dendrite, a synapse is formed. In order for some axons to find\ntheir target dendrites they must travel vast distances to complete\nthe connections that make up our neural circuitry. It’s this\ncircuitry that enables our senses, cognition, and motor skills,\nincluding learning and memory, and it is this circuitry that forms\nthe possibilities and the limits of one’s intellectual capacity.</P>\n<P>Neural\ncell bodies make up most of the part of our brains that scientists\ncall the gray matter. What they call the white matter is made up of\nthe wiring: the axons that connect to dendrites of other neural cell\nbodies, and the waxy myelin sheaths in which some axons are wrapped,\nlike the plastic coating on a lamp cord.</P>\n<P>This\nstudy showed what others have suggested, that the speed of our mental\nabilities is determined by the robustness of our neural connections;\nthat this robustness, at the initial stages, is largely determined by\nour genes, but that our neural circuitry does not mature as early as\nour physical development and instead continues to change and grow\nthrough our forties, fifties, and sixties. Part of the maturation of\nthese connections is the gradual thickening of the myelin coating of\nthe axons. Myelination generally starts at the backs of our brains\nand moves toward the front, reaching the frontal lobes as we grow\ninto adulthood. The frontal lobes perform the executive functions of\nthe brain and are the location of the processes of reasoning and\njudgment, skills that are developed through experience. The thickness\nof the myelin coating correlates with ability, and research strongly\nsuggests that increased practice builds greater myelin along the\nrelated pathways, improving the strength and speed of the electrical\nsignals and, as a result, performance. Increases neuroplasticity. The\nneural circuits we use when we take conscious action toward a goal\nare not the same ones we use when our actions have become automatic,\nthe result of habit. The actions we take by habit are directed from a\nregion located deeper in the brain, the basal ganglia. When we engage\nin extended training and repetition of some kinds of learning,\nnotably motor skills and sequential tasks, our learning is thought to\nbe recoded in this deeper region, the same area that controls\nsubconscious actions such as eye movements. As a part of this process\nof recoding, the brain is thought to chunk motor and cognitive action\nsequences together so that they can be performed as a single unit,\nthat is, without requiring a series of conscious decisions, which\nwould substantially slow our responses. These sequences become\nreflexive. \n</P>\n<P>Another\nfundamental sign of the brain’s enduring mutability is the\ndiscovery that the hippocampus, where we consolidate learning and\nmemory, is able to generate new neurons throughout life. This\nphenomenon, called neurogenesis, is thought to play a central role in\nthe brain’s ability to recover from physical injury and in humans’\nlifelong ability to learn. The that the activity of associative\nlearning stimulates an increase in the creation of new neurons in the\nhippocampus. This rise in neurogenesis starts before the new learning\nactivity is undertaken, suggesting the brain’s intention to learn,\nand continues for a period after the learning activity, suggesting\nthat neurogenesis plays a role in the consolidation of memory and the\nbeneficial effects that spaced and effortful retrieval practice have\non long-term retention.</P>\n<P>A\nkey determiner of fluid intelligence is the capacity of a person’s\nworking memory— the number of new ideas and relationships that a\nperson can hold in mind while working through a problem.</P>\n<P>The\nbrain is not a muscle, so strengthening one skill does not\nautomatically strengthen others. Learning and memory strategies such\nas retrieval practice and the building of mental models are effective\nfor enhancing intellectual abilities in the material or skills\npracticed, but the benefits don’t extend to mastery of other\nmaterial or skills. \n</P>\n<P>To\nthe extent that “brain training” improves one’s efficacy and\nself-confidence, as the purveyors claim, the benefits are more likely\nthe fruits of better habits, such as learning how to focus attention\nand persist at practice.</P>\n<P>People\nwith performance goals unconsciously limit their potential. But if\nyour goal is to increase your ability, you pick ever-increasing\nchallenges, and you interpret setbacks as useful information that\nhelps you to sharpen your focus, get more creative, and work harder. \n</P>\n<P>A\nmemory palace is a more complex type of mnemonic device that is\nuseful for organizing and holding larger volumes of material in\nmemory. It’s based on the method of loci, which goes back to the\nancient Greeks and involves associating mental images with a series\nof physical locations to help cue memories. \n</P>\n<P>Mnemonic\ndevices are sometimes discounted as tricks of memory, not tools that\nfundamentally add to learning, and in a sense this is correct. The\nvalue of mnemonics to raise intellectual abilities comes after\nmastery of new material, as handy mental pockets for fi ling what\nthey’ve learned, and linking the main ideas in each pocket to vivid\nmemory cues so that they can readily bring them to mind and retrieve\nthe associated concepts and details, in depth, at the unexpected\nmoments that the need arises.</P>\n<P>With\ncontinued retrieval, complex material can become second nature to a\nperson and the mnemonic cues are no longer needed through repeated\nuse, your brain encodes and “chunks” sequences of motor and\ncognitive actions, and your ability to recall and apply them becomes\nas automatic as habit.</P>\n<P>Effortful\nlearning changes the brain, building new connections and capability.\nThis single fact— that our intellectual abilities are not fixed\nfrom birth but are, to a considerable degree, ours to shape— is\ndoing. The more we do, the more we can do. To embrace this principle\nand reap its benefits is to be sustained through life by a growth\nmindset.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 8. Make It Stick </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Following\nare three keystone study strategies. Make a habit of them and\nstructure your time so as to pursue them with regularity. Practice\nRetrieving New Learning from Memory</P>\n<P>The\nharder it is for you to recall new learning from memory, the greater\nthe benefit of doing so. Making</P>\n<P>Space\nOut Your Retrieval Practice</P>\n<P>Spaced\npractice means studying information more than once but leaving\nconsiderable time between practice sessions.</P>\n<P>Interleave\nthe Study of Different Problem Types formulas, study more than one\ntype at a time, so that you are alternating between different\nproblems that call for different solutions. \n</P>\n<P>Elaboration\nimproves your mastery of new material and multiplies the mental cues\navailable to you for later recall and application of it. What is it?\nElaboration is the process of finding additional layers of meaning in\nnew material.</P>\n<P>A\npowerful form of elaboration is to discover a metaphor or visual\nimage for the new material. \n</P>\n<P>Generation\nhas the effect of making the mind more receptive to new learning.\nGeneration is an attempt to answer a question or solve a problem\nbefore being shown the answer or the solution.</P>\n<P>Experiential\nlearning is a form of generation: you set out to accomplish a task,\nyou encounter a problem, and you consult your creativity and\nstore-house of knowledge to try to solve it. \n</P>\n<P>Reflection\nis a combination of retrieval practice and elaboration that adds\nlayers to learning and strengthens skills.</P>\n<P>Reflection\nis the act of taking a few minutes to review what has been learned in\na recent class or experience and asking yourself questions.</P>\n<P>Calibration\nis the act of aligning your judgments of what you know and don’t\nknow with objective feedback so as to avoid being carried off by the\nillusions of mastery that catch many learners by surprise at test\ntime.</P>\n<P>Mnemonic\ndevices help you to retrieve what you have learned and to hold\narbitrary information in memory.</P>\n<P>Among\nthe highlights were these: \n</P>\n<UL>\n\t<LI><P>Always\n\tdoes the reading prior to a lecture \n\t</P>\n\t<LI><P>Anticipates\n\ttest questions and their answers as he reads \n\t</P>\n\t<LI><P>Answers\n\trhetorical questions in his head during lectures to test his\n\tretention of the reading \n\t</P>\n\t<LI><P>Review's\n\tstudy guides, finds terms he can’t recall or doesn’t know, and\n\trelearns those terms</P>\n\t<LI><P>Copies\n\tbolded terms and their definitions into a reading notebook, making\n\tsure that he understands them \n\t</P>\n\t<LI><P>Takes\n\tthe practice test that is provided online by his professor; from\n\tthis he discovers which concepts he doesn’t know and makes a point\n\tto learn them</P>\n\t<LI><P>Reorganizes\n\tthe course information into a study guide of his design \n\t</P>\n\t<LI><P>Writes\n\tout concepts that are detailed or important, posts them above his\n\tbed, and tests himself on them from time to time \n\t</P>\n\t<LI><P>Spaces\n\tout his review and practice over the duration of the course</P>\n</UL>\n<P><BR><BR>\n</P>\n</mat-expansion-panel>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'academy';\n}\n","<app-header></app-header>\n<app-menu></app-menu>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group mat-align-tabs=\"center\" color=\"accent\">\n    <mat-tab label=\"Weekly Journal\">\n        <app-weekly></app-weekly>\n    </mat-tab>\n\n    <mat-tab label=\"Monthly Lectures\">\n        <app-monthly></app-monthly>\n    </mat-tab>\n\n</mat-tab-group>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { HeaderComponent } from './header/header.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { WeeklyComponent } from './menu/weekly/weekly.component';\nimport { Week1Component } from './menu/weekly/week1/week1.component';\nimport { Week2Component } from './menu/weekly/week2/week2.component';\nimport { MothlyComponent } from './menu/monthly/monthly.component';\nimport { Month1Component } from './menu/monthly/month1/month1.component';\nimport { Book1Component } from './menu/monthly/month1/book1/book1.component';\nimport { Book2Component } from './menu/monthly/month1/book2/book2.component';\nimport { Week3Component } from './menu/weekly/week3/week3.component';\nimport { Week4Component } from './menu/weekly/week4/week4.component';\nimport { Week5Component } from './menu/weekly/week5/week5.component';\nimport { ResumeComponent } from './menu/monthly/month1/resume/resume.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    MenuComponent,\n    WeeklyComponent,\n    Week1Component,\n    Week2Component,\n    MothlyComponent,\n    Month1Component,\n    Book1Component,\n    Book2Component,\n    Week3Component,\n    Week4Component,\n    Week5Component,\n    ResumeComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatTabsModule,\n    BrowserAnimationsModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit,ViewContainerRef } from '@angular/core';\n\n@Component({\n  selector: 'app-week1',\n  templateUrl: './week1.component.html',\n  styleUrls: ['./week1.component.scss']\n})\nexport class Week1Component implements OnInit {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    This week I read and saw some content related to time administration and personal growth. If I had to explain in few words, I could enlist all the material studied the following way: \n    <ul>\n        <li>\n            Building and forgetting habits \n        </li>\n        <li>\n            The importance of accepting you can grow up more \n        </li>\n    </ul>\n</div>\n<mat-accordion>\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>How to build a new habit: This is your strategy guide.</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h2>Start with a small custom</h2>\n        <p>\n            We have to consider that our will and energy are not the same all day. Additionally, since it consumes vitality, you have an amount of stamina you have to care about. However, like any physical activity, you can increase the amount of strength you have. Here is when the Napoleonic principle enters, divide and conquer.  Maybe you could not acquire a full habit in a row, but you could cut in pieces and acquire them step by step. \n        </p>\n        <h2>Increase your habit in tiny ways</h2>\n        <p>\n            This part sounds very close to the KAIZEN principle. It means that every great success is only the product of continuous improvements. \n        </p>\n        <h2>As you build up, break habits into pieces.</h2>\n        <p>This could count as a part of the Napoleonic principle but focused on stamina administration.  \n        </p>\n        <h2>When you slip, get back on track quickly. \n        </h2>\n        <p>Here talks about being aware of your flaws. You cannot be perfect, but you can have backups plans. \n        </p>\n        <h2>Be patient. Stick to a pace you can sustain \n        </h2>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>How to start new habits that stick</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h2>The science of how habit work \n        </h2>\n        <p>The four stages of habits are:</p>\n            <ul>\n                <li>Cue: It is a kind of signal that alerts you of a possible reward </li>\n                <li>Craving: It is the desire behind the actions, is the motivation of what you are doing \n                </li>\n                <li>Response: It is an actual habit, depends a lot on the incentive and the inertia of the activity itself. \n                </li>\n                <li>Reward: The goal \n                </li>\n            </ul>\n        <p>We can split these four steps into two phases: \n        </p>\n            <ul>\n                <li>The problem phase: It includes clue and craving \n                </li>\n                <li>The solution phase: It involves response and reward \n                </li>\n            </ul>\n        <h2>Where to go from here</h2>\n        <p>If we understand how the cycle works, we could take advantage of it. If we want to create good habits. We have to make the cue obvious, the craving very attractive, the response (actions) easy, and the reward satisfying. \n        </p>\n        <p>On the other hand, if we want to forget a bad habit, we must do the opposite: we have to hide the cue, convert the craving into something unattractive, responding to laborious actions, and rewarding into something unsatisfying. \n        </p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Identity-Based Habits: How to Stick to Your Goals This Year</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h2>Identity-Based Habits</h2>\n        <p>The remarkable concept here is that you act as the image you have about yourself. Additionally, rather than just propose ideal goals, it is better to define specific and measurable goals. \n        </p>\n        <h2>The three levels of change: \n        </h2>\n        <ul>\n            <li>The first layer is changing your outcomes. You have to change your results by doing something in the direction of your goal. </li>\n            <li>The second layer is changing your process. It is related to habits and the system that you must create to achieve your goal. \n            </li>\n            <li>The third and deepest layer is changing your identity. This is an alternative to outcome-based habits, which are more related to specific actions or goals. On the other hand, identity-based is focused on the image that you want to build about yourself.  \n            </li>\n        </ul>\n        <h2>The Recipe for Sustained Success \n        </h2>\n        <p>To change your belief about yourself, you could take the following steps: \n        </p>\n        <ul>\n            <li>Decide the type of person you want to be \n            </li>\n            <li>Prove it to yourself with small wins \n            </li>\n            <li>The first step could seem difficult; however, a good practice could be asking yourself: “Who is the type of person that could get the outcome I want?”. Then start planning small steps to achieve it. \n            </li>\n        </ul>\n        <h2>What is your identity? \n        </h2>\n        <p>Being motivated is good; however, you have to be very aware of it. If you don’t control it, you could end burn out after a while, or on the other hand, you could lose your focus. \n        </p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>The power of vulnerability</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>This talk relies a lot on the sense of human connection. If we start from the idea that connection is the thing that makes sense to be here and that the shame is the fear of disconnection.  We could end with the premise that there were two groups of people: the ones that sense intense connections and the others that not. The variable that separates those who have a strong sense of love and belonging and the people who struggle for it is that the first group believes that they deservers it, and they are worthy.</p>\n        <p>However, the first group feels vulnerable. Nevertheless, they believe that what made them vulnerable made them beautiful too. </p>  \n        <p>We have to be very aware of numbing the vulnerability. Because we can’t selectively numb emotion, so if we started, we could end numbing everything. </p>\n        <p>Blame is a way to discharge pain and discomfort.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Nearsoft conferences</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>There were several speeches at the conference. However, I put special attention to product development’s advice, microservices, and the apprentice path.</p>\n        <h2>Product development’s advice \n        </h2>\n        <p>Some good practices of product development rely on the connecting ability. You must understand your client and customer before doing anything. The main reason, sometimes you got stuck into a specific way of solving a problem, maybe for a technical or even a personal motive. However, if you understand what your client wants, behaves, and senses, you could find a better solution. \n        </p>\n        <p>Then the other recommendations were focused on project implementation, for example, doing good comments and documentation and finding a team motivated with the goal. \n        </p>\n        <h2>Microservices</h2>\n        <p>We could define them as a collection of independent tools that helps you to develop a project. They have several pros and cons, which are very related. As the number of tools increases, the network information becomes more complex. The advantage of using independent tools rely on the fact that you could modify, maintain and test without affecting all the system you already have. \n        </p>\n        <h2>Apprentice path </h2>\n        <p>In the last speech, the topic was how to become a good apprentice. I found this talk appropriate for any context. Because it doesn’t matter which discipline you choose, if you believe that you have mastered it, you couldn’t grow up anymore in that field. The reason, you can only bloom as you are concern about your scope beyond. \n        </p>\n        <p>In few words, you have to be humble to recognize you can develop. However, you also have to be wise to note your knowledge to help others. </p>    \n    </mat-expansion-panel>\n</mat-accordion>\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-week3',\n  templateUrl: './week3.component.html',\n  styleUrls: ['./week3.component.scss']\n})\nexport class Week3Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1></h1>\n<p>This week was very interesting. I've learned several things about different areas starting from how some compressors work to how to work better with others. \n    If I should summarize this week in three words, I'll choose remix, kaizen, and collaboration. \n    It is marvelous how the combination of different disciplines ends up with a totally new concept.  </p>\n<p>For example: </p>\n    <ul><li>Space state machines + Bayesian probability = Markov compression method </li></ul>\n<p>A topic that caught me was the one related to collaboration and tolerance. That showed me that we must be concern about our bias. Everybody indeed has, but that should not be an excuse to try to comprehend and accept others. \n    Additionally, we should be aware of how we express ourselves to others. We could be harming without knowing.  \n    Finally, work in teams involves several abilities. A lot of them are related to how we perceive others. When we work as a team, we have to see our partners, not for judging but for asking or giving help because, in the end, we are pulling the same boat. </p>\n\n\n<mat-accordion>\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Tooling techniques for the performance ninja - Chrome Dev Summit 2013 (Colt\n                McAnlis)</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <img src=\"assets/Week 3/Performance Tuning Loop.png\" style=\"width: 50%;\"> \n        <h2>Perfmatters</h2>\n    \n<p>\n    What can be measured can be optimized.\n    That means if we can't have a reference about something, this could not be\n    enhanced since we don't know if we are going better or worse.\n</p>\n    \n    <h3>Three steps of performance</h3>\n    <ol>\n        <li>Gather</li>\n        <li>Insight</li>\n        <li>Action</li>\n        <li>Repeat</li>\n    </ol>\n\n    <h3>3 Pillars of web performance</h3>\n    <ol>\n        <li>Network</li>\n        <ul>\n            <li><p>Optimize the critical path: A browser can paint nothing until it is resolved. This could be done by:</p>\n                <ul>\n                    <li>Reducing # of critical-path requests</li>\n                    <li>Compressing your data</li>\n                </ul>\n            </li>\n        </ul>\n        <li>Render\n            <ul>\n                <li>Reduce paints</li>\n                <li>Avoid repaint</li>\n            </ul>\n        </li>\n        <li>Compute\n            <ul><li>Reduce JS execution time</li></ul>\n        </li>\n    </ol>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>Variable Length Codes (Ep 1, Compressor Head)</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>Conversion and compression are closely related to\n            internet speed.</p>\n            \n            <p>Morse code beginning of sharing information through an\n            electromagnetic field, they assigned their representation based on usage\n            distribution </p>\n            \n            <p>There exists some representation based on the morse\n            code distribution approach.</p>\n            \n            <h2>Claud Shannon</h2>\n            \n            <p>His definition of entropy, a minimum number of bits to\n            model data, represents the best estimate of the minimum number of bits required\n            to represent the string allows to create a way of storing information content\n            based on the probability of symbols. </p>\n            \n            <p>His method consists on: </p>\n            \n            <p>Assign shortest codes to most frequent symbols.  </p>\n            \n            <p>Prefix Property: Once a code has been assigned to a\n            symbol, no other code can start with that pattern</p>\n            \n            <h2>David Huffman</h2>\n            <img src=\"assets/Week 3/char encoding.png\">\n            <p>He created the Huffman tree that assigns the shortest\n            variable to the commoner word.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p>The LZ77 Compression Family (Ep 2, Compressor Head)</p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <h1></h1>\n        <p>This concept is easier to explain through images. The main\n            idea is to attempt to find repeated sequences and assign them to a pointer that\n            recursively builds the information encoded. </p>\n            \n            <img src=\"assets/Week 3/lz.png\">\n            <p>LZ Family</p>\n            \n            <p>LZ77-78</p>\n            \n            <p><a\n            href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-wusp/fb98aa28-5cd7-407f-8869-a6cef1ff1ccb\">https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-wusp/fb98aa28-5cd7-407f-8869-a6cef1ff1ccb</a></p>\n            \n    </mat-expansion-panel>\n\n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Markov Chain Compression (Ep 3, Compressor Head) </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <img src=\"assets/Week 3/Two-state model.png\">\n        <p><a href=\"https://www.youtube.com/watch?v=i3AkTO9HLXo\">https://www.youtube.com/watch?v=i3AkTO9HLXo</a></p>\n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Google I/O 2009 - The Myth of the Genius Programmer </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>People are afraid of showing their ignorance.</p>\n    <p>Bus factor, made your teams avoid concentrate all the knowledge and responsibility so if that person disappears all the project ends.</p>\n    <p>Drop ego </p>\n    <p>Criticism is not evil if it helps to improve.</p>\n    <p>Practice is the key to master anything.</p>\n    <p>Be the small fish try to challenge yourself. If you are always choosing easy projects, you won't grow up working on the edge of your knowledge.</p>\n    <p>Be influenced</p>\n    <p>Be vulnerable</p>\n    <p>Technology does not solve social issues. Only people can deal with emotions and human behavior. It doesn't matter how advanced is software or a tool if the people don't want to change, it won't work.</p>\n    <p>Don't try to be a genius; that is not necessary. Just collaborate early and often pay attention to your tools and timing.</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Google I/O 2012 - The Art of Organizational Manipulation </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>You need to learn how to navigate in teams. Nowadays projects, are designed and built inside them. So learning how to work in them is necessary not only for the good of the project but for your personal and professional growth.</p>\n    <p>If you are in charge, you should be a\n    servant leader looking for the needings of the team (tools, knowledge, or\n    emotional support). If they are well, they work well also.</p>\n    <p>Additionally, you should pursue\n    responsibility and act like an adult.</p>\n    <h2>Environment </h2>\n    <p>Some practices and behaviors must be\n    avoided:</p>\n    <p>Being conservative </p>\n    <p>\n    Ignores low performers. They are the ones who need helps. As a\n    Muslim saying goes, a caravan is as fast as the slowest of its camels.</p>\n    <p>The office politician </p>\n    <p>The boss that asks for performance but doesn’t do anything </p>\n    <p>Unrealistic expectations </p>\n    <p>Distrust</p>\n    <h2>How do you get things done in a dysfunctional environment? </h2>\n    <p>Ask for forgiveness, not for permission</p>\n    <p>Sneak ideas in </p>\n    <p>Don’t destroy, change </p>\n    <p>Try solutions </p>\n    <p>Work the ladder </p>\n    <p>Manage upward perception </p>\n    <p>Use the favor economy </p>\n    <p>Get in front of the people </p>\n    <p>Learn how to ask a busy exec for anything\n    </p>\n    <p>Make small emails, and try to be the most\n    efficient as you could </p>\n    <p>Don’t be a victim</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Google I/O 2011: Programming Well with Others: Social Skills for Geeks </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>You should to look for autonomy, responsibility and purpose<br>\n    <br>\n    </p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Developing Expertise: Herding Racehorses, Racing Sheep </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>Software development has several ranges of experiences since\n    neither the people neither the project are the same </p>\n    <p>It is a journey, so some practices you acquired could change\n    through time </p>\n    <p>Intuition </p>\n    <p>Be interactive with novice, avoid useless information. For\n    example, large spec sheets or information that won't be using at the beginning.</p>\n    <p>Activities should change between levels. Novices require and\n    need rules and short-time tasks. While senior developers could be bothered with\n    administrative kinds of stuff, the delegation of responsibilities helps focus\n    meanwhile could help beginners to learn the know-how.</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Damien Katz @ DevconTLV: The Best Programming Language </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>There is no best programming\n    language. </p>\n    <p>Criteria for choosing a\n    programming language: </p>\n    <p>\n    Productivity: You have to identify\n    what is the better scenario for a given language. Which variables and functions\n    are built in it, and what do you need. </p>\n    <p>\n    Performance: You have to be aware of\n    the dimension/size of your project. For example, some functions could afford some\n    low performance. However, if the project works well, don’t waste time on those\n    tasks. </p>\n    <p>\n    Reliability: You have to select a\n    language that affords the SLA.  </p>\n    <p>\n    Portability: It doesn’t matter if it\n    is the most powerful language if you can’t use it in your deployment’s\n    environment </p>\n    <p>\n    Community:  </p>\n    <p>\n    What you already know: There is value\n    in learning something new.</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Perfection Is An Unrealistic Goal </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>Sometimes the process of a task could\n    become extremely long and tedious than the task itself. On most occasions, it\n    is better to try an idea and see how it works than prepare extraneous research.\n    Remember, you can’t specify something you have no idea about, so trying to\n    start from there could be troublesome. </p>\n    <h2>Some Myths </h2>\n    <p>We can understand/know something at all.</p>\n    <p>The things are linear. Nothing in nature\n    behaves that way, neither learning, neither mastering, neither nothing.</p>\n    <h2>Some pieces of advice </h2>\n    <p>Celebrate your success and repeat </p>\n    <p>90 minutes is the optimal duration to\n    sleep</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> The Power of an Agile Mindset </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>Kaizen</p>\n    <p>Am I fixing or improving? </p>\n    <p>Belief about yourself affects other's believes.</p>\n    <p>We should always look at our team as a whole. Because\n    if we look at each other as unhealthy rivals, we could end up fighting between\n    us. </p>\n    <p>We have to be aware of how we congratulate or correct\n    someone. </p>\n    <p>The words chosen could affect the performance and\n    mindset; even if we said with good intentions, it could impact negatively.</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Linda Rising on Collaboration, Bonobos and The Brain </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>Most of the decisions making go on unconsciously. It seems,\n    even if we start an idea on the logical part, in the end, we choose whatever\n    our unconscious choose. However, we could help us by gathering data and\n    analyzing them. Because once our logical part starts something, our unconscious\n    will take that as a root and evolve the idea until a decision. So, it is a good\n    practice to gather and analyze data, alone or in a team. It works since the\n    members will work better if they understand the reasons for the actions.</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> GOTO 2016 • Who do You Trust? Beware of Your Brain • Linda Rising </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>We have to be aware about how our unconscious labelers\n    works with us, because even if we can’t get rid of it, we could be conscious\n    about it and avoid to be mean with others. </p>\n    <p>Categories depends on context.</p>\n    <p>Working together could helps to get closer to others.</p>\n    \n    </mat-expansion-panel>\n    \n    \n    <mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n        <mat-expansion-panel-header class=\"matPanelTitle\">\n        <mat-panel-title>\n            <p> Everything is a Remix Remastered (2015 HD) </p>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <p>Creation requires influence</p>\n        <img src=\"assets/Week 3/Genre.png\">\n        <img src=\"assets/Week 3/SUBGENRE.png\">\n        <img src=\"assets/Week 3/ELEMENTS.png\">\n        <img src=\"assets/Week 3/THE BASIC ELEMENTS.png\">\n    <p>Copy is a way of learn</p>\n    \n    </mat-expansion-panel>\n</mat-accordion>","import { Component, OnInit } from '@angular/core';\nimport { Month1Component } from './month1/month1.component';\n\n@Component({\n  selector: 'app-monthly',\n  templateUrl: './monthly.component.html',\n  styleUrls: ['./monthly.component.scss']\n})\nexport class MothlyComponent implements OnInit {\n  months = [\n    {\n      \"name\":\"Month 1\",\n      \"description\":\"From March 29th to May 3rd\",\n      \"component\":Month1Component\n    }\n  ];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-accordion>\n  <h1></h1>\n  <mat-expansion-panel hideToggle *ngFor=\"let month of months\" class=\"exP\">\n    <mat-expansion-panel-header>\n      <mat-panel-title style=\"color: white;\">{{month.name}}</mat-panel-title>\n      <mat-panel-description style=\"color: white;\">{{month.description}}</mat-panel-description>\n    </mat-expansion-panel-header>\n    <ng-container *ngComponentOutlet=\"month.component\"></ng-container>\n  </mat-expansion-panel>  \n</mat-accordion>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\" fxLayoutAlign=\"center center\">\n    <span>\n      <img src=\"assets/favicon.png\" height=30 width=41>\n    </span>\n    <span>&nbsp;</span>\n    <span>Yasuo's Journal</span>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { Book1Component } from './book1/book1.component';\nimport { MatDialog} from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { Book2Component } from './book2/book2.component';\nimport { ResumeComponent } from './resume/resume.component';\n\n@Component({\n  selector: 'app-month1',\n  templateUrl: './month1.component.html',\n  styleUrls: ['./month1.component.scss']\n})\nexport class Month1Component implements OnInit {\n  books =\n    [{\n      \"title\":\"Code: The Hidden Language of Computer Hardware & Software\",\n      \"author\":\"Charles Petzold\",\n      \"imageA\":\"assets/Month 1/Charles_petzold.png\",\n      \"imageB\":\"assets/Month 1/Code.jpg\",\n      \"page\":Book1Component\n    },{\n      \"title\":\"Make It Stick\",\n      \"author\":\"Peter C. Brow, Henry L. Roediger III, Marc A. Mc.Daniel\",\n      \"imageA\":\"assets/Month 1/MSA.jpg\",\n      \"imageB\":\"assets/Month 1/MakeStick.jpg\",\n      \"page\":Book2Component\n    },{\n      \"title\":\"Summary month 1\",\n      \"author\":\"Yasuo Maidana\",\n      \"imageA\":\"assets/Month 1/fotos.jpg\",\n      \"imageB\":\"assets/Month 1/studying.jpg\",\n      \"page\":ResumeComponent\n    }];\n  constructor(private dialog:MatDialog) { }\n\n  ngOnInit(): void {\n  }\n  openBook(book: ComponentType<unknown>){\n    this.dialog.open(book,{width:\"100%\",height:\"100%\"})\n  }\n}\n","<div fxLayout=\"row\" fxLayoutGap=\"15px\" cols=\"2\">\n  <mat-card class=\"example-card\" fxFlex=\"50%\" \n  color=\"accent\" *ngFor=\"let book of books\"\n  (click)=\"openBook(book.page)\">\n      <mat-card-header>\n        <div mat-card-avatar class=\"book-header-image\" \n        style=\"background-image: url('{{book.imageA}}')\">\n        </div>\n        <mat-card-title>{{book.title}}</mat-card-title>\n        <mat-card-subtitle>{{book.author}}</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content class=\"book-card\">\n        <img mat-card-image src={{book.imageB}} \n        alt=\"{{book.title}}\" \n        class=\"book-image\">\n      </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-week4',\n  templateUrl: './week4.component.html',\n  styleUrls: ['./week4.component.scss']\n})\nexport class Week4Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p></p>\n<p>This week was interesting. Here we see some videos related to artificial intelligence and quantum computing. We explored the TensorFlow and Scikit libraries and learned how quantum computing could help with AI development and simulations.</p>\n<p>On the other hand, talking about soft skills. I was very impressed with how to design new products or ideas. Something that almost everybody forgets relies on the fact that high-impact innovations are motivated by the willingness to help others rather than money. The Moonshot strategy is an example of this is when you are working on though projects, it is not money or profits that keeps you there, it is the desire that your work can change the world. </p>\n<p></p>\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Machine Learning Recipes with Josh Gordon </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P></P>\n    <P><B>Supervised learning</B></P>\n    <P>Create a classifier by finding patterns in examples</P>\n    <P><B>Types of classifiers</B></P>\n    <P>Artificial neural networks</P>\n    <P>Support Vector Machine</P>\n    <P>Lions</P>\n    <P>Tigers</P>\n    <P>Bears</P>\n    <P><B>Testing Data</B></P>\n    <P>Examples\n    used to “test” the classifier accuracy</P>\n    <P>Not\n    part of the training data</P>\n    <P><B>Featuring\n    engineering</B></P>\n    <P>Featuring\n    engineering the most important part of a ML here you choose which\n    data will represent your model</P>\n    <P><B>Binary\n    classification</B></P>\n    <P>Though\n    test</P>\n    <P>Avoid\n    redundant features</P>\n    <P>Features\n    should be easy to understand</P>\n    <P>Simpler\n    relationships are easier to learn</P>\n    <P>Ideal\n    features are:</P>\n    <P>Informative</P>\n    <P>Independent</P>\n    <P>Simple</P>\n    <P>Inception\n    - Google Computer Vision model</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Carl Sagan's Pale Blue Dot OFFICIAL </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>This\n    video was very Copernican, reminding us that we are nothing compared\n    with the universe, but at the same time remembering us that we are\n    part of the same universe.\n    </P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Bret Victor - The Future of Programming </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Technology\n    change quickly, people not</P>\n    <P>\n    </P>\n    <P>Coding:\n    Direct manipulation of data</P>\n    <P>Procedures:\n    Goals and constraints</P>\n    <P>Text\n    dump: Spatial representations</P>\n    <P>Sequential:\n    Concurrent</P>\n    <P>\n    </P>\n    <P>API</P>\n    <P>\n    </P>\n    <P>To\n    avoid get stuck in one technology you should ask yourself what are\n    you doing? Do you know what are you doing?</P>\n    <P>\n    </P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Moonshot Thinking from Astro Teller </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>It\n    is better to set inspiring goals even if they are risky because even\n    if you fail you grow up. That enables you (your organization) to\n    reach best scenarios \n    </P>\n    <P>Fail\n    fast, that helps you to find good idea or strategies.</P>\n    <P>Avoid\n    thinking on costs focus on doing and improving, being greedy could\n    take down your ideas.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Fast Company Exclusive: Inside Google X </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Point\nto the moon, make the world at least ten times better</P>\n<P>The\nprocess of innovation is expensive and slow, so is better to fail\nquickly to avoid getting stuck into something \n</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> La mejor presentación de tu vida </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>We\n    have to focus our attention on what we are doing instead of what they\n    think.</P>\n    <P>If\n    we success in doing people think or feel we could convince them to\n    something for us</P>\n    <P>We\n    should try to make people think at the optimal point to maintain\n    their attention and good willing.</P>\n    <P>Whatever\n    you are presenting should be:</P>\n    <UL>\n        <LI><P>Give\n        something useful and new</P>\n        <LI><P>Simplify,\n        we tend to take our decisions based on the ease instead of the\n        quantity of arguments  \n        </P>\n        <LI><P>Find\n        an order to show your ideas. \n        </P>\n        <UL>\n            <LI><P>Choose\n            if your story will be from general to particular (long talks) or\n            from particular to general (short talks)</P>\n            <LI><P>Make\n            chunks ordered of information. Choose a structure for your ideas.</P>\n        </UL>\n        <LI><P>Try\n        to find relationship with something that your audience knows and\n        make a kind of metaphor. Use association of ideas \n        </P>\n        <LI><P>Use\n        the 3S strategy</P>\n        <UL>\n            <LI><P>Say\n            what you are going ro say</P>\n            <LI><P>Say\n            it</P>\n            <LI><P>Say\n            what you said</P>\n        </UL>\n        <LI><P>Foment\n        participation</P>\n        <UL>\n            <LI><P>Make\n            open questions, avoid specific response ones</P>\n            <LI><P>If\n            your audience is big, choose someone to participate, the bigger\n            your audience the lower the probability that someone will arise by\n            themself \n            </P>\n            <LI><P>Congratulates\n            the participation</P>\n            <LI><P>Avoid\n            yes, but… it is better yes, and additionally</P>\n        </UL>\n        <LI><P>Use\n        objects, and work on your props, avoid long text, control the\n        showing rhythm</P>\n        <LI><P>Control\n        the tone and emotion rhythm</P>\n    </UL>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> What Got You here Won't Get You There | Marshall Goldsmith | Talks at Google </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <UL>\n        <LI><P>We\n        have to learn to loose \n        </P>\n        <LI><P>help\n        more, judge less</P>\n        <LI><P>Feedforward</P>\n        <UL>\n            <LI><P>Forget\n            the past</P>\n        </UL>\n        <LI><P>If\n        something don’t work don’t do it.</P>\n        <LI><P>Don’t\n        try to feel better than others</P>\n        </UL>\n    <P><B>Developing\n    yourself as a leader and partner</B></P>\n    <UL>\n        <LI><P>Ask</P>\n        <LI><P>Listen</P>\n        <LI><P>Think</P>\n        <LI><P>Thank</P>\n        <LI><P>Respond</P>\n        <LI><P>Involve</P>\n        <LI><P>Change</P>\n        <LI><P>Follow-up\n        </P>\n    </UL>\n    <P>Friends\n    and family</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Quantum videos </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <p>These videos were kind of complicated. However, the main idea behind quantum computing relies on several principles, just to mention one, the quantum entanglement that allows the simultaneous change of several nodes. That enhances velocity because instead of having procedural calculations, you could just finish them with just one shot. Additionally, given how things work on quantum mechanics (the uncertainty principle), it allows you to test several states again once. Those characteristics make quantum computing a good tool for optimization and searching problems which could help a lot with AI development and simulations.\n    </p>\n    <div class=\"images\" >\n        <img src=\"assets/Week 4/Logic gates.png\" alt=\"Logic gates\">\n        <img src=\"assets/Week 4/Quantum Computer.png\" alt=\"Quantum ComputerLogic gates\">\n    </div>\n    \n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Bret Victor - Inventing on Principle </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>how\ndo you represent data is very important, the most important concept\nbehind invention is how it impacts and enhance people</P>\n<P>Identify</P>\n<P>Experience\na lot of things</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Version Control (Git) </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Commits\nin Git are immutable. This doesn’t mean that mistakes can’t be\ncorrected, however; it’s just that “edits” to the commit\nhistory are actually creating entirely new commits, and references\n(see below) are updated to point to the new ones.</P>\n<div class=\"images\"><img src=\"assets/Week 4/Objects and content-addressing.png\"></div>\n<P>\n</P>\n<P>Now,\nall snapshots can be identified by their ShA-1 hash. That’s\ninconvenient, because humans aren’t good at remembering strings of\n40 hexadecimal characters.</P>\n<P>Git’s\nsolution to this problem is human-readable names for ShA-1 hashes,\ncalled “references”. References are pointers to commits.</P>\n<P><B>Repositories</B></P>\n<P>Finally,\nwe can define what (roughly) is a Git <I>repository</I>:\nit is the data objects and references.</P>\n<P><B>Staging\narea</B></P>\n<P>Git\naccommodates such scenarios by allowing you to specify which\nmodifications should be included in the next snapshot through a\nmechanism called the “staging area”.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Editors (Vim) </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Vim\nis the most popular command-line-based editor.</P>\n<P><B>Modal\nediting</B></P>\n<P>Vim’s\ndesign is based on the idea that a lot of programmer time is spent\nreading, navigating, and making small edits, as opposed to writing\nlong streams of text. For this reason, Vim has multiple operating\nmodes.</P>\n<UL>\n\t<LI><P><B>Normal</B>:\n\tfor moving around a file and making edits</P>\n\t<LI><P><B>Insert</B>:\n\tfor inserting text</P>\n\t<LI><P><B>Replace</B>:\n\tfor replacing text</P>\n\t<LI><P><B>Visual</B>\n\t(plain, line, or block): for selecting blocks of text</P>\n\t<LI><P><B>Command-line</B>:\n\tfor running a command</P>\n</UL>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Java Build Tools for Dependency Management </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>They\nwere builded to become the process of using libraries easier</P>\n<P><B>how\nto Define Dependencies</B></P>\n<P>In\nthe examples below, we will show you how to add a dependency for the\nopen-source library Guava from Google, which is available from Maven\nCentral. To start, you need to know its group-id (com.google.guava),\nits artifact-id (guava), and which version of the library you’re\ninterested in (as of this writing, the latest version is “15.0”)</P>\n<P>\n</P>\n<div class=\"images\"><img src=\"assets/Week 4/How to Define Dependencies in Maven.png\"></div>\n<div class=\"images\"><img src=\"assets/Week 4/How to Define Dependencies in Gradle.png\"></div>\n<P>\n</P>\n<P><B>Version\nranges</B></P>\n<P>Instead\nof just a single version number, you can also specify a range, using\na notation very similar to how you would define an interval in\nmathematics: parenthesis ( ) work as exclusive markers and brackets [\n] as inclusive markers. Using a range allows the tool to pick a\nsuitable version for the build. Continuing the example with Guava, if\nyou know that any version between 12.0 and up to 15.0 (excluded)\nwould work, you could define it as “[12.0,15.0)”. You can also\nleave it open-ended like “[12.0,)”, which adds a requirement for\nany version from 12.0 and up, similarly “(,12.0]” would be any\nversion up to and including 12.0. Or if you want anything higher than\n12.0, except for version 13.0, you could specify\n“[12.0,13.0),(13.0,)” as the version.</P>\n<P>Besides\nranges and specific versions, dependencies can also be resolved using\ndynamic versions by using the keywords ‘LATEST’ or ‘RELEASE’\ninstead of the version number. \n</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Mocks Aren't Stubs </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>'Mock\nObjects’: special case objects that mimic real objects for testing.</P>\n<P><B>Regular\nTests</B></P>\n<P>xUnit\ntests follow a typical four phase sequence: setup, exercise, verify,\nteardown. \n</P>\n<P>\n</P>\n<P>In\nthis case the setup phase is done partly in the setUp method (setting\nup the warehouse) and partly in the test method (setting up the\norder). The call to order.fill is the exercise phase. This is where\nthe object is prodded to do the thing that we want to test. The\nassert statements are then the verification stage, checking to see if\nthe exercised method carried out its task correctly. In this case\nthere's no explicit teardown phase, the garbage collector does this\nfor us implicitly.</P>\n<P>\n</P>\n<P>This\nstyle of testing uses <B>state\nverification</B>:\nwhich means that we determine whether the exercised method worked\ncorrectly by examining the state of the order and its collaborators\nafter the method was exercised. As we'll see, mock objects enable a\ndifferent approach to verification.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Tests with Mock Objects </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>To\nbegin with, the setup phase is very different. For a start it's\ndivided into two parts: data and expectations. The data part sets up\nthe objects we are interested in working with, in that sense it's\nsimilar to the traditional setup. The difference is in the objects\nthat are created. The SUT is the same - an order. however the\ncollaborator isn't a warehouse object, instead it's a mock warehouse\n- technically an instance of the class Mock.</P>\n<P>\n</P>\n<P>The\nsecond part of the setup creates expectations on the mock object.The\nexpectations indicate which methods should be called on the mocks\nwhen the SUT is exercised.</P>\n<P>\n</P>\n<P>Once\nall the expectations are in place I exercise the SUT. After the\nexercise I then do verification, which has two aspects. I run asserts\nagainst the SUT - much as before. however I also verify the mocks -\nchecking that they were called according to their expectations.</P>\n<P>\n</P>\n<P>Mocks\nuse <B>behavior\nverification</B>,\nwhere we instead check to see if the order made the correct calls on\nthe warehouse. We do this check by telling the mock what to expect\nduring setup and asking the mock to verify itself during\nverification. Only the order is checked using asserts, and if the\nmethod doesn't change the state of the order there's no asserts at\nall.</P>\n<P>\n</P>\n<h2 >The Difference Between Mocks\nand Stubs</h2>\n<P>Using\nmocks is one way to not use a real warehouse in the test, but there\nare other forms of unreal objects used in testing like this.</P>\n<P>\n</P>\n<P>Test\nDouble: the generic term for any kind of pretend object used in place\nof a real object for testing purposes.</P>\n<P>\n</P>\n<P>Types\nof double:</P>\n<UL>\n\t<LI><P><B>Dummy</B>\n\tobjects are passed around but never actually used. Usually they are\n\tjust used to fill parameter lists.</P>\n\t<LI><P><B>Fake</B>\n\tobjects actually have working implementations, but usually take some\n\tshortcut which makes them not suitable for production.</P>\n\t<LI><P><B>Stubs</B>\n\tprovide canned answers to calls made during the test, usually not\n\tresponding at all to anything outside what's programmed in for the\n\ttest.</P>\n\t<LI><P><B>Spies</B>\n\tare stubs that also record some information based on how they were\n\tcalled. One form of this might be an email service that records how\n\tmany messages it was sent.</P>\n\t<LI><P><B>Mocks</B>\n\tobjects pre-programmed with expectations which form a specification\n\tof the calls they are expected to receive.</P>\n</UL>\n<P>Of\nthese kinds of doubles, only mocks insist upon behavior verification.\nThe other doubles can, and usually do, use state verification. Mocks\nactually do behave like other doubles during the exercise phase, as\nthey need to make the SUT believe it's talking with its real\ncollaborators - but mocks differ in the setup and the verification\nphases.</P>\n<P>\n</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Xunit </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>It was inspiring see how something that born as a small project done without bigger purposes ended as an industry standard</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> UnitTest </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Firstly\nthere is a notion that unit tests are low-level, focusing on a small\npart of the software system. Secondly unit tests are usually written\nthese days by the programmers themselves using their regular tools -\nthe only difference being the use of some sort of unit testing\nframework [1]. Thirdly unit tests are expected to be significantly\nfaster than other kinds of tests.</P>\n<P>\n</P>\n<P>Object-oriented\ndesign tends to treat a class as the unit, procedural or functional\napproaches might consider a single function as a unit. But really\nit's a situational thing - the team decides what makes sense to be a\nunit for the purposes of their understanding of the system and its\ntesting. Although I start with the notion of the unit being a class,\nI often take a bunch of closely related classes and treat them as a\nsingle unit. Rarely I might take a subset of methods in a class as a\nunit. however you define it doesn't really matter.</P>\n<P>\n</P>\n<div class=\"images\"><img src=\"assets/Week 4/Solitary Tests.png\"></div>\n<P>\n</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Test Driven development </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>\n</P>\n<div class=\"images\"><img src=\"assets/Week 4/Test fails.png\"></div>\n<P>TDD\ncannot automatically fix algorithms; neither can any other technique.\nWhere rigorous testing helps is ensuring that the details of your\nalgorithm remain the same even if you refactor or add features. \n</P>\n<P>This\nis a <I><B>good</B></I>\nthing; it makes you stop, revert your change, and try again.</P>\n<P>\n</P>\n\n</mat-expansion-panel>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-week5',\n  templateUrl: './week5.component.html',\n  styleUrls: ['./week5.component.scss']\n})\nexport class Week5Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1></h1>\n<p>This week I put special attention to pretotyping and testing. I learned some aspects of testing, as some tools that could be used and good practices. </p>\n<p>Now, talking about pretotyping, it is a convenient tool to know if an idea is worth it or not.</p>\n<P>On the other hand, I watched some inspiring videos related to Richard Feynman. It is incredible, how with just mathematics and a brilliant mind, someone could imagine solutions, which will be taken on decades after.</P>\n<h1></h1>\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> The Pretotyping Manifesto - Stanford Graduate School of Business </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>The\nlaw of failure: Most of new ideas fails</P>\n<P>Make\nsure you are building the right it before built it right</P>\n<P>IT:\ninnovate technology, idea to try</P>\n<P>The\npretotyping manifesto:</P>\n<UL>\n\t<LI><P>Innovators\n\tbeat ideas</P>\n\t<LI><P>Pretotypes\n\tbeats productypes</P>\n\t<LI><P>Doing\n\tbeats talking</P>\n\t<LI><P>Simple\n\tbeats complex</P>\n\t<LI><P>Nows\n\tbeats later</P>\n\t<LI><P>Commitment\n\tbeats committees</P>\n\t<LI><P>Data\n\tbeats opinions</P>\n</UL>\n<div class='images'><img src='assets/Week 5/1.png'></div><div class='images'><img src='assets/Week 5/2.png'></div><div class='images'><img src='assets/Week 5/3.png'></div><div class='images'><img src='assets/Week 5/4.png'></div>\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Seth Lloyd on Programming the Universe </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Changing\nby mutation s</P>\n<P>Quantity\nof information is different than meaning of information</P>\n<P>History\nabout information</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Why you should have your own black box | Matthew Syed | TEDxLondonBusinessSchool </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Aviations\nvs Healthcare</P>\n<P>Learning\nvs Justification</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Kolton Andrus on Breaking Things at Netflix </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Every\nsystem will fail on some point, the thing is how it will afford that\nfailure, what could happen</P>\n<P>AMAZING</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Chaos Engineering: the history, principles, and practice </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Chaos\nEngineering is a disciplined approach to identifying failures before\nthey become outages. By proactively testing how a system responds\nunder stress, you can identify and fix failures before they end up in\nthe news. That helps you to build more resilient systems</P>\n<P><B>What\nare the Principles of Chaos Engineering?</B></P>\n<div class='images'><img src='assets/Week 5/5.png'></div><P><B>Why\nwould you break things on purpose?</B></P>\n<P>Chaos\nEngineering is a tool we use to build such an immunity in our\ntechnical systems by injecting harm (like latency, CPU failure, or\nnetwork black holes) in order to find and mitigate potential\nweaknesses.</P>\n<P>By\nbreaking things on purpose we surface unknown issues that could\nimpact our systems and customers.</P>\n<P><B>Fallacies\nof Distributed Systems:</B></P>\n<UL>\n\t<LI><P>The\n\tnetwork is reliable</P>\n\t<LI><P>Latency\n\tis zero</P>\n\t<LI><P>Bandwidth\n\tis infinite</P>\n\t<LI><P>The\n\tnetwork is secure</P>\n\t<LI><P>Topology\n\tdoesn't change</P>\n\t<LI><P>There\n\tis one administrator</P>\n\t<LI><P>Transport\n\tcost is zero</P>\n\t<LI><P>The\n\tnetwork is homogeneous</P>\n</UL>\n<P><B>What\nare the customer, business, and technical benefits of Chaos\nEngineering?</B></P>\n<UL>\n\t<LI><P>Customer:\n\tNo outages disrupt their day-to-day lives.</P>\n\t<LI><P>Business:</P>\n\t<UL>\n\t\t<LI><P>Prevent\n\t\textremely large losses in revenue and maintenance costs</P>\n\t\t<LI><P>Create\n\t\thappier and more engaged engineers</P>\n\t\t<LI><P>Improve\n\t\tin on-call training for engineering teams</P>\n\t\t<LI><P>Improve\n\t\tthe incident management program</P>\n\t</UL>\n\t<LI><P>Technical:\n\t</P>\n\t<UL>\n\t\t<LI><P>Reduction\n\t\tin incidents</P>\n\t\t<LI><P>Reduction\n\t\tin on-call burden</P>\n\t\t<LI><P>Increased\n\t\tunderstanding of system failure modes</P>\n\t\t<LI><P>Improved\n\t\tsystem design</P>\n\t\t<LI><P>Faster\n\t\tmean time to detection for SEVs, and reduction in repeated SEVs.</P>\n\t</UL>\n</UL>\n<P><B>Which\nChaos Engineering experiments do you perform first?</B></P>\n<div class='images'><img src='assets/Week 5/6.png'></div><P>Order</P>\n<OL>\n\t<LI><P>Known\n\tknowns</P>\n\t<LI><P>Known\n\tunknowns</P>\n\t<LI><P>Unknown\n\tknowns</P>\n\t<LI><P>Unknown\n\tunknowns</P>\n</OL>\n<P><B>Planning\nyour First Experiment</B></P>\n<P>Which\nscenarios are more likely (or more frightening) and should be tested\nfirst. \n</P>\n<P><B>Creating\na Hypothesis</B></P>\n<P>What\nwill be the impact to customers, to your service, or to your\ndependencies?</P>\n<P><B>Measuring\nthe Impact</B></P>\n<P>It\nis good to have a key performance metric that correlates to customer\nsuccess (such as orders per minute). \n</P>\n<P>As\na rule of thumb, if you ever see an impact to these metrics, you want\nto halt the experiment immediately. \n</P>\n<P>Next\nis measuring the failure itself where you want to verify (or\ndisprove) your hypothesis. \n</P>\n<UL>\n\t<LI><P>This\n\tcould be the impact on latency, requests per second, or system\n\tresources. \n\t</P>\n\t<LI><P>Lastly,\n\tyou want to survey your dashboards and alarms for unintended side\n\teffects.</P>\n</UL>\n<P><B>Have\na Rollback Plan</B></P>\n<P>All\nof our attack's must can be reverted immediately, allowing you to\nsafely abort and return to steady state if things go wrong.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Testing Engineering@Google The Release Process for Google's Chrome for iOS </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P><B>Software\nengineer in test</B></P>\n<P>Focused\non testability- refactor code to make it easier to for test authoring</P>\n<P>Focused\non development and release efficiency</P>\n<P>Developer\noriented</P>\n<P>Develop\nbuild, release, and test automation framework</P>\n<P><B>Test\nengineer</B></P>\n<P>Focused\non largely on functional testing and scenario testing</P>\n<P>Product\nand user focused</P>\n<P>Tend\nto be product and/pr domain experts</P>\n<P>Read\nand debug product code and write test code</P>\n<P>Test\nplanning, strategy, risk, and test design is key</P>\n<P>They\nuse bots for automated testing they have:</P>\n<UL>\n\t<LI><P>Unittests</P>\n\t<LI><P>End\n\tto end tests with KIF</P>\n\t<LI><P>Performance\n\ttests</P>\n\t<LI><P>Screenshot\n\ttests</P>\n</UL>\n<P>Manual\ntesting have</P>\n<UL>\n\t<LI><P>Test\n\tcases that can’t be automated</P>\n\t<LI><P>Test\n\tcoverage regardless of test status being flakey</P>\n\t<LI><P>Test\n\tcases that haven’t been automated yet</P>\n\t<LI><P>New\n\tfeatures that don’t have end to end tests yet</P>\n</UL>\n<P> Say\nwhat you changed</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Richard Feynman, The Great Explainer: Great Minds </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>AMAZING</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> GTAC 2014: Test coverage at Google </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P><B>Code\nreview</B></P>\n<UL>\n\t<LI><P>Before\n\tcheck in</P>\n\t<LI><P>Web\n\tbased</P>\n\t<UL>\n\t\t<LI><P>Streamlined</P>\n\t</UL>\n\t<LI><P>Small,\n\tincremental changes</P>\n\t<UL>\n\t\t<LI><P>Efficient</P>\n\t</UL>\n\t<LI><P>Mandatory</P>\n\t<UL>\n\t\t<LI><P>Enforced\n\t\tby tools</P>\n\t\t<LI><P>Automated\n\t\tanalysis</P>\n\t\t<UL>\n\t\t\t<LI><P>Fully\n\t\t\tautomated</P>\n\t\t\t<LI><P>Style\n\t\t\tguide compliance?</P>\n\t\t\t<LI><P>Do\n\t\t\tthe tests pass?</P>\n\t\t\t<LI><P>Fast</P>\n\t\t\t<LI><P>Test\n\t\t\tcoverage?</P>\n\t\t</UL>\n\t</UL>\n</UL>\n<P>Code\nreview - Human touch</P>\n<UL>\n\t<LI><P>2\n\tseal of approval</P>\n\t<LI><P>Owner\n\tof the code you are changing</P>\n\t<LI><P>Readability</P>\n\t<UL>\n\t\t<LI><P>Certifies\n\t\tlanguage style knowledge</P>\n\t</UL>\n\t<LI><P>Reviewers\n\tsee the results of automatic analysis too</P>\n</UL>\n<P>Test\ncoverage</P>\n<UL>\n\t<LI><P>Measure\n\tused to describe how much the test excessive the code</P>\n\t<LI><P>Types:</P>\n\t<UL>\n\t\t<LI><P>Function</P>\n\t\t<LI><P>Statement</P>\n\t\t<LI><P>Branch</P>\n\t\t<LI><P>Other</P>\n\t</UL>\n</UL>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> TEDxCaltech - Danny Hillis - Reminiscing about Richard Feynman </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Inspiring</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Feynman on Scientific Method. </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <OL>\n\t<LI><P>We\n\tguessed</P>\n\t<LI><P>Compute\n\tthe consequences of the guess</P>\n\t<LI><P>Compare\n\tthe computation result to nature</P>\n</OL>\n<P>We\ncan only be sure we are wrong</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> TEDxCaltech - Tony Hey - Feynman and Computation </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Pipelining</P>\n<P>Feynman\ndiagram</P>\n<P>Quantum\ncomputer</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> GTAC 2014: I Don't Test Often ... But When I Do, I Test in Production </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Freedom and\nresponsibility</P>\n<UL>\n\t<LI><P>Developers\n\tdeploy when they want</P>\n\t<LI><P>They also\n\tmanage their own capacity and autoscaling</P>\n\t<LI><P>And are\n\ton-call to fix anything that breaks at 3am (disponible)</P>\n</UL>\n<P>Failure is all\naround us</P>\n<P>Design to avoid\nfailure</P>\n<UL>\n\t<LI><P>Exception\n\thandling</P>\n\t<LI><P>Redundancy</P>\n\t<LI><P>Fallback or\n\tdegraded experience (circuit breakers)</P>\n</UL>\n<P>Testing</P>\n<UL>\n\t<LI><P>Unit</P>\n\t<LI><P>Integration</P>\n\t<LI><P>Stress</P>\n\t<LI><P>Exhaustive\n\ttesting to simulate all failures modes</P>\n\t<LI><P>Cause\n\tfailure deliberately to validate resiliency</P>\n\t<LI><P>Test design\n\tassumption by stressing them</P>\n\t<LI><P>Don't wait for random failure. Remove its uncertainty by forcing it regularly</P>\n</UL>\n<P>Canary\ndeployment</P>\n<UL>\n\t<LI><P>Push\n\tchange to small number of instances</P>\n\t<LI><P>Use\n\tAsgard for red/black push</P>\n\t<LI><P>Monitor\n\tclosely to detect regressions</P>\n\t<LI><P>Automated\n\tcanary analysis</P>\n\t<LI><P>Automatically\n\tcancel deployment if problems occur</P>\n</UL>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> GTAC 2014: The Testing User Experience </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Testing\nis a problem when you have very large projects, architecture</P>\n<div class='images'><img src='assets/Week 5/7.png'></div>\n</mat-expansion-panel>\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> Pretotyping excersice </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <H2>Introduction \n</H2>\n<P>In\nthis report, we present three ideas that were tested by using the\nPretotyping technique. Pretotyping is about trying a lot of ideas,\ntranslated into fast failures, increasing probabilities to find a\nsuccessful idea. In this case, we began by discussing different ideas\nas a group and we filtered them through the question: “Would we use\nit?”. \n</P>\n<P>Finally,\nwhen we answered yes to the three ideas we moved one to the next\nstage, working the pretotyping. In the next sections, you will be\nable to see our hypothesis and next if they were correct or not. \n</P>\n<P>Once\nthe ideas were decided, the next thing to do was finding our\npretotyping, in our case we decided it was a good idea to create fake\nads about the ideas and gather data about how many people would\nactually voluntarily click on the ad. \n</P>\n<P>Here\nare the ads we used: \n</P>\n<H3>Courselet</H3>\n<P>Click\nhere if you would like to track the price and get recommendations of\ncourses on any platform (e. g. Coursera, edx, udemy, udacity…) in a\nsingle place without having to visit other platforms separately and\nbe aware of the discounts in your courses.</P>\n<H3>Gastracker - Gas price tracker</H3>\n<P>Are\nyou interested to know which fuel station in your city has the better\nprices so you can save some money?</P>\n<P>Click\nhere if you’d like to know the prices of your local fuel stations\nin real-time.</P>\n<H3>Knowsher - Knowledge sharer</H3>\n<P>Would\nyou like to use an app in which you can search for abilities that you\nwant to learn in exchange for teaching something else? You don’t\nneed to pay to learn, just to teach something else in return. In case\nyou want it you can also pay a fee so you get access to it without\nhaving to teach something back.</P>\n<H2>IDEA 1: Track and recommend\ncourse prices Courselet</H2>\n<P><B>Description</B><BR><B>\n</B>Track\nthe price and receive recommendations of courses in any platform\n(Coursera, edX, Udacity, Udemy...) everything in just one place\nwithout needing to visit each platform independently, follow\ndiscounts, and more on.</P>\n<P><B>Hypothesis</B>\n <BR>Self-paced\nonline learning and education have become popular in the last couple\nof years, and with the current problems due to the pandemic, people\nare interested in finding the best cost-benefit courses of all\nplatforms in one single place. Everything from the comfort of their\nhome. \n</P>\n<P><B>Experiment\ndescription </B><BR>\n\tTo\nfind out what people think about this idea we put to the test fake\nads through bitly URLs with a specific description of the service.\nThis way we had the opportunity to discover if people would click on\nthe link to find out more about the service. This is how we would\nhave a first approximation about how feasible was our idea.\n</P>\n<P>We\nshare this link with a specific group of people so we can know how\nmany people of the total number of integrants of the group click on\nthe fake ad. \n</P>\n<P><B>Validation</B>\n<BR>We\nselected a group of people where we thought would be interested in\nthe ideas. We share the link just as if it was a normal ad. 73% of\nthe total number of people click on the link we share. \n</P>\n<P>We\ncan determine that people are interested in finding the best\ncost-benefit courses of all platforms in one single place. We cannot\nsay that people are going to consume the product yet, but at least we\ncan say they have an interest in it. \n</P>\n<P><B>Results</B>\n<BR>From\nthe data, we can determine that in fact, people are interested in\nfinding their online courses in just one place and track prices to\nget discounts. Nevertheless, we aren’t sure yet that people would\nconsistently consume our product. That’s why we should proceed with\na new approach to gather more data, we could for example create a\nvery simple prototype and see if we would use it. Then maybe another\nform could be to select a new and bigger group of people and allow\nthem to test a version of the service. \n</P>\n<H2>IDEA 2: Gas price tracker app</H2>\n<P><B>Description</B><BR><B>\n</B>This\napp will track the prices of different gas stations in the city, then\ngive you the best recommendation according to the distance and price.\nThis app will help you save money the next time that you put gas in\nyour car.  \n</P>\n<P><B>Hypothesis</B><BR><B>\n</B>The\nprices of the gas differ from each gas station. Searching for the\nbest price of the gas is nowadays an interest for the people. \n</P>\n<P><B>Experiment description</B></P>\n<p>We\n\tshared a bitly link to find out if the idea was interesting and\n\tuseful for the people. If the persons take their time to click on the\n\tlink, we could know that they are interested in acquiring the\n\tservice. This was our idea to test and confirm if our idea has true\n\tpotential for the current market. </p>\n<P>The\nlink with a brief description of the service was shared with a\nspecific group of young people, so we could know what percentage of\nthe people were interested in clicking on it. \n</P>\n<P><B>Validation</B><BR><B>\n</B>We\nselect a group of target people who could be interested in our app\nrelated to the prices of the gas stations. 73% of persons of the\ngroups showed interest in the application, clicking on the link.  \n</P>\n<P>According\nto this result, we can determine that people are interested in\ngetting lower gas prices. We don’t know the true potential of our\nproduct, but at least the premise is enough to get the genuine\ninterest of the people. \n</P>\n<P><B>Results</B><BR><B>\n</B>With\nthis data, we know that the idea is strong enough to keep going. The\nnext step is to prove which is the right interface and user\nexperience to keep the attention of the people. Creating a low budget\nprototype and doing the same type of experiment will help us to get\nthe right approach of the product. \n</P>\n<H2>IDEA 3: Knowledge exchange app</H2>\n<P><B>Hypothesis</B></P>\n<P>Learning\n\tis something that all people constantly seek. To be better people and\n\tbetter professionals, we must be constantly learning. To get a better\n\tjob we must learn new things.\n</P>\n<P>During\nthe Covid-19 pandemic, many people have been affected. Many have lost\ntheir jobs, and for those who did not have it, it has been much more\ndifficult to find one.</P>\n<P>\n</P>\n<P>The\nbest way to keep a job, get one, or even get a better one is to\nconstantly gain knowledge. Learning is the only thing that can assure\nus that at some point we can succeed.</P>\n<P>\n</P>\n<P>The\nproblem is that acquiring knowledge is not usually something\naccessible to all people, much less during a global crisis such as\nthat caused by Covid-19. That is why many people during this crisis,\neven when they were willing to dedicate time to learn, could not do\nso because they did not have the way to access quality education.</P>\n<P>\n</P>\n<P>But\nit is also true that all people have something they can teach. All\npeople have knowledge that they can share. That is why an application\nthat allows the exchange of knowledge could be very helpful for those\npeople who want to learn something new and do not have the resources\nto do so.</P>\n<P>\n</P>\n<P>The\nmost important resources we have are our time and our knowledge, that\nis why we can share them with someone else, and in exchange for that\nother people will be able to share their knowledge and time with us.</P>\n<P><B>Experiment\nDescription</B><BR><B>\n</B>To\ntest whether people were interested in using an application in which\nthey could exchange knowledge, we decided to share a link with the\nfollowing description in several groups:</P>\n<P>&quot;Would\nyou like to be able to use an app in which you can look for skills\nthat you want to learn in exchange for you teaching others? You do\nnot need to pay to learn just to teach something to others in return.\nIf you want, you can pay to have access without needing to teach\nanything&quot;.</P>\n<P>We\nthink that if a person clicked on the link after reading the\ndescription, they did so because they were interested in using the\napplication or at least knowing a little more about it.</P>\n<P><B>Validation</B><BR><B>\n</B>As\nwith the rest of our experiments we sent a link to some groups with\nthe premise of having access to the app, as what would be an example\nof it. The link we used was a tool that let us verify how many people\nclicked on it after some time. In this case, we were able to verify\nin a matter of hours the interest people had in our app. While our\nvalidation of the data can’t tell how it would perform in a bigger\npopulation, it gives us fast and reliable information and feedback\nwhether people are interested in the product as to click right away\nin hopes of finding the mentioned app, and this simple and fast\nprocess complies with the mindset of pretotyping, getting fast and\nconcise feedback about your product.</P>\n<P><B>Results</B><BR><B>\n</B>In\nthis case, we verified that at least 73% of the people we worked with\nfor this study were interested in the idea of the knowledge exchange\napp since that is the percentage that clicked on the link. Of course,\nwe could complement this information or increase the resources used\nto verify how the app could be tested in a more public way, though in\nthis case there were some barriers as the pandemic which\nunfortunately stops us from being able to do an in-person study.\nStill, certain tests could be applied to see how people interacted\nwith the app, but of course, there would need to be an implementation\nof it already and in this case, we just wanted to see how interesting\nit would be for a certain public, so we could fail or succeed\nquickly, to move onto the next step.</P>\n<P><BR><BR>\n</P>\n</mat-expansion-panel>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef} from '@angular/material/dialog';\n@Component({\n  selector: 'app-book1',\n  templateUrl: './book1.component.html',\n  styleUrls: ['./book1.component.scss']\n})\nexport class Book1Component implements OnInit {\n\n  constructor(public dialogRef:MatDialogRef<Book1Component>) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"accent\"> \n    <mat-toolbar-row>\n        Code: The Hidden Language of Computer Hardware & Software\n        <span class=\"flex-spacer\"></span>\n        <button mat-button mat-dialog-close>&times;</button>\n    </mat-toolbar-row>\n    <mat-toolbar-row>\n        Summary By Yasuo Maidana\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<p>I found this book very interesting. Besides the history of computers and how microprocessors were built, I believe the most notable topic here is the story of the basic logic that allows computers to work. I didn't understand very well Moore's and Morgan's theorems until I read this book.</p>\n<p>I strongly recommend this book for beginners, or for people interested in how we ended up with computers.</p>\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 1. Best Friends </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>In\nMorse code, you have two kinds of blinks—short blinks and long\nblinks.</P>\n<P>In\nmany languages, a strong correspondence exists between speech and\ntext.</P>\n<P>A\ncode is useful if it serves a purpose that no other code can.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 2. Codes and Combinations </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>The\nword undefined used in this context refers to a code that doesn't\nstand for anything.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 3. Braille and Binary Codes </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>This\nsystem used a pattern of raised dots and dashes on heavy paper and\nwas intended for use by soldiers in passing notes to each other in\nthe dark when quiet was necessary.</P>\n<P>Codes\nsuch as these are often called precedence, or shift, codes. They\nalter the meaning of all subsequent codes until the shift is undone.</P>\n<P>Escape\ncodes let you &quot;escape&quot; from the humdrum, routine\ninterpretation of a sequence of codes and move to a new\ninterpretation. As we'll see in later chapters, shift codes and\nescape codes are common when written languages are represented by\nbinary codes.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 5. Seeing Around Corners </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>A\nbit of confusion surrounds the word ground because it's also often\nused to refer to a part of a circuit we've been calling the common.\nIn this chapter, and until I indicate otherwise, a ground is a\nphysical connection with the earth.</P>\n<P>The\nsmaller the AWG number, the thicker the wire and also the less\nresistance it has.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 6. Telegraphs and Relays </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>The\ndevice we've invented is called a repeater, or a relay. A relay is\nlike a sounder in that an incoming current is used to power an\nelectromagnet that pulls down a metal lever.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 7. Our Ten Digits </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Numbers\nare certainly the most abstract codes we deal with on a regular\nbasis.</P>\n<P>The\nHindu-Arabic number system is said to be positional, which means that\na particular digit represents a different quantity depending on where\nit is found in the number.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 8. Alternatives to Ten </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Ten\nis an exceptionally important number to us humans. Ten is the number\nof fingers and toes most of us have, and we certainly prefer to have\nall ten of each.</P>\n<P>John\nWilder Tukey</P>\n<P>He\ndecided to coin a new, shorter word to replace the unwieldy five\nsyllables of binary digit. He considered bigit and binit but settled\ninstead on the short, simple, elegant, and perfectly lovely word bit.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 9. Bit by Bit by Bit </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>The\nthing about the bit is that it conveys very little information. A bit\nof information is the tiniest amount of information possible.</P>\n<P>In\nthe lingo of communication theory, he used redundancy to counteract\nthe effect of noise. The word noise is used in communication theory\nto refer to anything that interferes with communication.</P>\n<P>So\nif the base two logarithm of 128 is 7, and the base two logarithm of\n256 is 8, then what's the base two logarithm of 200? It's actually\nabout 7.64, but we really don't have to know that. If we needed to\nrepresent 200 different things with bits, we'd need 8 bits.</P>\n<P>Perhaps\nthe most common visual display of binary digits is the ubiquitous\nUniversal Product Code (UPC)</P>\n<P>This\nis known as the left-hand guard pattern, and it allows the\ncomputer-scanning device to get oriented.</P>\n<P>From\nthe guard pattern, the scanner can determine the width of the bars\nand gaps that correspond to single bits.</P>\n<P>You'll\nsee that each code in this table has an odd number of 1 bits. This is\nanother form of error and consistency checking known as parity.</P>\n<P>A\ngroup of bits has even parity if it has an even number of 1 bits and\nodd parity if it has an odd number of 1 bits.</P>\n<P>Modulo\ncheck character. This character enables yet another form of error\nchecking.</P>\n<P>All\nthat needs to be done when bits represent other information is to\ncount the number of possibilities. This determines the number of bits\nthat are needed so that each possibility can be assigned a number.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 10. Logic and Switches </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>The\nbasis of Aristotle's logic was the syllogism. In a syllogism, two\npremises are assumed to be correct, and from these a conclusion is\ndeduced.</P>\n<P>In\nconventional algebra, the operands (which are usually letters) stand\nfor numbers, and the operators (most often + and x) indicate how\nthese numbers are to be combined.</P>\n<P>The\nfirst rule is that addition and multiplication are commutative.</P>\n<P>By\ncontrast, subtraction and division are not commutative. Addition and\nmultiplication are also associative, multiplication is said to be\ndistributive over addition.</P>\n<P>It\nwas Boole's genius to make algebra more abstract by divorcing it from\nconcepts of number.</P>\n<P>In\nBoolean algebra (as Boole's algebra was eventually called), the\noperands refer not to numbers but instead to classes.</P>\n<P>A\nclass is simply a group of things, what in later times came to be\nknown as a set.</P>\n<P>In\nconventional (numeric) algebra, the operators + and x are used to\nindicate addition and multiplication. In Boolean algebra, the same +\nand x symbols are used, and here's where things might get confusing.\nEverybody knows how to add and multiply numbers in conventional\nalgebra, but how do we add and multiply classes?</P>\n<P>The\n+ symbol in Boolean algebra means a union of two classes. A union of\ntwo classes is everything in the first class combined with everything\nin the second class.</P>\n<P>The\nx symbol in Boolean algebra means an intersection of two classes. An\nintersection of two classes is everything that is in both the first\nclass and the second class.</P>\n<P>To\navoid confusion between conventional algebra and Boolean algebra,\nsometimes the symbols U and ∩ are used for union and intersection\ninstead of + and x.</P>\n<P>The\ncommutative, associative, and distributive rules all hold for Boolean\nalgebra.</P>\n<P>What's\nmore, in Boolean algebra the + operator is distributive over the x\noperator. This isn't true of conventional algebra:</P>\n<P>The\nsymbol 1 in Boolean algebra means &quot;the universe&quot;—that is,\neverything we're talking about.</P>\n<P>The\n1 symbol can be used with a minus sign to indicate the universe\nexcluding something.</P>\n<P>The\nother symbol that we need is the 0, and in Boolean algebra the 0\nmeans an empty class—a class of nothing.</P>\n<P>The\nempty class results when we take an intersection of two mutually\nexclusive classes,</P>\n<P>It's\ncalled the Law of Contradiction and indicates that something can't be\nboth itself and the opposite of itself.</P>\n<P>Boolean\nalgebra provides a mathematical method for solving the syllogisms of\nAristotle.</P>\n<P>but\nBoolean algebra can also be used to determine whether something\nsatisfies a certain set of criteria.</P>\n<P>In\naddition, you can use the word NOT wherever you see a 1 followed by a\nminus sign.</P>\n<P>The\n+ (previously known as a union) now means OR. The x (previously known\nas an intersection) now means AND. The 1 – (previously the universe\nwithout something) now means NOT.</P>\n<P>With\nthis formula written down, the salesperson can perform something\ncalled a Boolean test. Without making a big fuss about it, I've\nsubtly shifted to a somewhat different form of Boolean algebra. In\nthis form of Boolean algebra, letters no longer refer to classes.\nInstead, the letters can now be assigned numbers.</P>\n<P>The\nnumeral 1 means Yes, True, this particular cat satisfies these\ncriteria. The numeral 0 means No, False, this cat doesn't satisfy\nthese criteria.</P>\n<P>While\nwe're simplifying the expression, keep in mind that we're not really\nadding and multiplying, although generally we can pretend that we\nare. Most of the same rules apply when + means OR and x means AND.\n(Sometimes in modern texts the symbols ^ and ν are used for AND and\nOR instead of x and +. But here's where the + and x signs perhaps\nmake the most sense.)</P>\n<P>Not\neven that icon of the computer revolution Charles Babbage\n(1792–1871), who had corresponded with Boole and knew his work, and\nwho struggled for much of his life designing first a Difference\nEngine and then an Analytical Engine that a century later would be\nregarded as the precursors to modern computers.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 11. Gates (Not Bill) </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Logic\ngates perform simple tasks in logic by blocking or letting through\nthe flow of electrical current.</P>\n<P>Input\nis information that controls how a circuit behaves.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 13. But What About Subtraction? </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>This\ntype of notation is called ten's complement. To convert a 3-digit\nnegative number to ten's complement, we subtract it from 999 and add\n1.</P>\n<P>The\nrange of numbers that you can represent is now limited to –128\nthrough +127. The most significant (leftmost) bit is known as the\nsign bit. The sign bit is 1 for negative numbers and 0 for positive\nnumbers.</P>\n<P>To\ncalculate the two's complement, first calculate the ones' complement\nand then add 1. This is equivalent to inverting all the digits and\nadding 1.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 15. Bytes and Hex </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>The\nword had its origins in the word bite but was spelled with a y so\nthat nobody would mistake the word for bit.</P>\n<P>the\nword came to mean a group of 8 bits.</P>\n<P>Half\na byte—that is, 4 bits—is sometimes referred to as a nibble (and\nis sometimes spelled nybble), but this word doesn't come up in\nconversation nearly as often as byte.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 16. An Assemblage of Memory </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>It's\ncalled random access memory because each of the eight latches can be\nread from or written to simply by changing the Address inputs.</P>\n<P>In\ncontrast, some other types of memory have to be read\nsequentially—that is, you'd have to read the value stored at\naddress 100 before you could read the value stored at address 101.</P>\n<P>Number\nof values in RAM array = 2Number of Address inputs</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 17. Automation </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>Numeric\ncodes used in such a manner are often called instruction codes, or\noperation codes, or (most concisely) opcodes. They &quot;instruct&quot;\ncircuitry to perform a certain &quot;operation.&quot;</P>\n<P>Our\nALU performs only arithmetic, specifically addition and subtraction.\nIn slightly more sophisticated computers (as we'll see), the ALU can\nalso perform logical functions, such as AND, OR, and XOR. The 16-bit\ncounter is called a Program Counter.</P>\n<P>It's\n&quot;soft&quot; because it can be changed much more easily than the\nhardware can.</P>\n<P>in\ncomputer programs, we can distinquish between code (which refers to\nthe instructions themselves) and data, which are the numbers that the\ncode manipulates.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 18. From Abaci to Chips </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>The\nproduct of two numbers is simply the sum of their logarithms.</P>\n<P>Pins\ncorresponding to punched holes in the cards came into contact with a\npool of mercury that completed an electrical circuit that triggered\nan electromagnet that incremented a decimal counter.</P>\n<P>who\nin 1924 changed the name of the company to International Business\nMachines Corporation, or IBM.</P>\n<P>the\nfirst relay computer seems to have been constructed by Conrad Zuse\n(1910–1995), who as an engineering student in 1935 began building a\nmachine in his parents' apartment in Berlin.</P>\n<P>It\nwas the first transistor, a device that some people have called the\nmost important invention of the twentieth century.</P>\n<P>TTL\nstands for transistor-transistor logic.</P>\n<P>CMOS,\nwhich stands for complementary metal-oxide semiconductor.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 19. Two Classic Microprocessors </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>An\nemulator program running on the PowerPC examines each opcode of a 68K\nprogram, one by one, and performs an appropriate action.</P>\n<P>One\nis pipelining. When the processor is executing one instruction, it's\nreading in the next instructions, even to a certain extent\nanticipating how Jump instructions will alter the execution flow.\nModern processors also include a cache (pronounced cash). This is an\narray of very fast RAM inside the processor that is used to store\nrecently executed instructions. Because computer programs often\nexecute small loops of instructions, the cache prevents these\ninstructions from being repetitively reloaded.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 20. ASCII and a Cast of Characters </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>The\nconsecutive character codes for such a sentence are often referred to\nas a text string.</P>\n<P>The\nonly real problem with Unicode is that it makes invalid the old\nequivalence between one character of text and 1 byte of storage.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 21. Get on the Bus </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>A\nbus is simply a collection of digital signals that are provided to\nevery board in a computer.</P>\n<P>Address\nsignals to address random access memory.</P>\n<P>\nData\nOutput signals to address other devices attached to the computer.</P>\n<P>A\ndata output signal from the microprocessor becomes a data input\nsignal to RAM and other devices to write data to RAM or to other\ndevices.</P>\n<P>Data\nInput signals provided by other parts read by the microprocessor.</P>\n<P>Control\nsignals the control signals of the particular microprocessor around\nwhich the computer is built.</P>\n<P>The\nbus supplies power to the various boards that the computer comprises.</P>\n<P>Direct\nmemory access (DMA) requests.</P>\n<P>Normally,\nthe microprocessor handles all reading from and writing to memory.\nBut using DMA, another device can bypass the microprocessor by taking\nover the bus and reading from or writing to memory directly.</P>\n<P>Just\nabout everything that's connected to the bus uses the data input\nsignals of the bus. At any time, only one board connected to the bus\nshould be determining what those data input signals are.</P>\n<P>Bandwidth\nis an extremely important concept in communication, and it relates to\nthe amount of information that can be transferred over a particular\ncommunication medium.</P>\n<P>Pixel:\nPicture element.</P>\n<P>Disks\nare generally categorized as floppy disks (also called diskettes) or\nhard disks (also called fixed disks).</P>\n<P>The\nmost obvious difference between memory and storage is that memory is\nvolatile; it loses its contents when the power is shut off.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 22. The Operating System </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>The\nfirst priority has to be to get rid of the control panel.</P>\n<P>A\nfile system is a method of disk storage in which data is organized\ninto files.</P>\n<P>A\nfile is simply a collection of related data that occupies one or more\nsectors on the disk.</P>\n<P>Most\nimportant, each file is identified by a name that helps you remember\nwhat the file contains.</P>\n<P>First,\neach file on the disk is identified by a name.</P>\n<P>Second,\nfiles don't have to occupy consecutive sectors on a disk.</P>\n<P>The\nfirst two allocation blocks are used for the directory.</P>\n<P>The\ndirectory is the area of the disk that contains the names and some\ncrucial information about every file stored on the disk.</P>\n<P>A\nfile that isn't a text file is called a binary file.</P>\n<P>Application\nprogramming interface, or API.</P>\n<P>Frequently,\nthe BDOS has to make use of subroutines in the Basic Input/Output\nSystem (BIOS) which is the area that actually accesses the hardware\nof the keyboard, the video display, and the disk drives.</P>\n<P>The\nAPI is a device-independent interface to the hardware of the\ncomputer.</P>\n<P>The\nnormal directory on the disk is called the root directory.\nDirectories contained in other directories are called subdirectories.</P>\n<P>virtual\nmemory, in which blocks of memory are stored in temporary files\nduring periods when the memory blocks aren't needed and then read\nback into memory when they are needed.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 23. Fixed Point, Floating Point </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>This\nnumber can't be expressed as the ratio of two integers, which means\nthat the decimal fraction continues indefinitely without any\nrepetition or pattern:</P>\n<P>If\na number is not a solution of any algebraic equation with whole\nnumber coefficients, it's called a transcendental.</P>\n<P>This\ntype of storage and notation is also called fixed-point format\nbecause the decimal point is always fixed at a particular number of\nplaces—in</P>\n<P>Fixed-point\nformat works well only if you know that numbers aren't going to get\ntoo large for the memory location that you've mapped out and that you\nwon't need more decimal places.</P>\n<P>floating-point\naddition basically requires that you add two significands; the tricky\npart is using the two exponents to figure out how the two\nsignificands mesh.</P>\n<P>Floating-point\narithmetic is so important to scientific and engineering applications\nthat it's traditionally been given a very high priority.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 24. Languages High and Low </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>This\nis called a cross-assembler.</P>\n<P>The\nfirst problem is that it can be very tedious.</P>\n<P>You're\nworking down on the level of the microprocessor chip, and you have to\nworry about every little thing.</P>\n<P>The\nsecond problem is that assembly language isn't portable.</P>\n<P>Compiler,\nwhich is the program that converts the statements of your high-level\nlanguage to machine code.</P>\n<P>An\nassembler is simplified somewhat because of the one-to-one\ncorrespondence between assembly-language statements and machine code.\nA compiler usually must translate a single statement of a high-level\nlanguage into many machine-code instructions.</P>\n<P>A\nprimary advantage is that high-level languages are usually easier to\nlearn and to program in than assembly languages.</P>\n<P>High-level\nlanguages are often portable—that is, they aren't dependent on a\nparticular processor as are assembly languages.</P>\n<P>The\nactual executable files are still specific to individual processors.</P>\n<P>It's\nalmost always the case that a good assembly-language programmer can\nwrite better code than a compiler can.</P>\n<P>Run-time\nerror—an error that's apparent only when you run the program.</P>\n<P>The\nreal statement is called a declaration statement. It indicates that\nyou want to declare the presence of variables in your program.</P>\n<P>assignment\nstatement equal sign example(a=2).</P>\n<P>The\nloop allows you to write a program that does the same thing for many\ndifferent values of a variable.</P>\n<P>Conditional.\nThis is a statement that causes another statement to execute only if\na particular condition is true.</P>\n<P>&quot;computer\nscience is like engineering—it is all about getting something to do\nsomething.&quot;</P>\n<P>An\ninterpreter, however, reads source code and executes it directly as\nit's reading it without creating an executable file.</P>\n<P>Interpreters\nare easier to write than compilers, but the execution time of the\ninterpreted program tends to be slower than that of a compiled\nprogram.</P>\n<P>C\nis the exception to this rule. In addition, an important feature of C\nis its support of pointers, which are essentially numeric memory\naddresses.</P>\n\n</mat-expansion-panel>\n\n\n<mat-expansion-panel hideToggle class=\"ExpansionPanel\">\n    <mat-expansion-panel-header class=\"matPanelTitle\">\n    <mat-panel-title>\n        <p> 25. The Graphical Revolution </p>\n        </mat-panel-title>\n    </mat-expansion-panel-header>\n    <P>The\nSAGE computers also supported light pens that let the operators alter\nimages on the display. Light pens are peculiar devices that look like\na stylus with a wire attached to one end. If the proper software is\nrunning, the computer can detect where the light pen is pointing on\nthe screen and alter an image in response to the pen's movements.</P>\n<P>This\nis an acronym for &quot;What you see is what you get,&quot; the\ncontribution to computer lingo of the comedian Flip Wilson in his\nGeraldine persona.</P>\n<P>This\ndistinction no doubt originates from the architecture of von Neumann\ncomputers, in which something is either machine code or is data acted\nupon by machine code.</P>\n<P>In\nobject-oriented programming, however, an object is a combination of\ncode and data.</P>\n<P>The\nactual way in which the data in an object is stored is understood\nonly by code associated with the object.</P>\n<P>Objects\ncommunicate with one another by sending and receiving messages, which\ngive instructions to an object or ask for information from it.</P>\n<P>A\nbutton has a certain dimension and position on the screen and\ndisplays some text or a little picture, all of which is data\nassociated with the object. Code associated with the object\ndetermines when the user &quot;presses&quot; the button with the\nkeyboard or the mouse and sends a message indicating the button has\nbeen triggered.</P>\n<P>Object-oriented\nlanguages allow the programmer to consider different solutions that\nare often structurally superior.</P>\n<P>Vector\ngraphics involves creating images algorithmically using straight\nlines, curves, and filled areas.</P>\n<P>This\nis the province of the computer-assisted drawing (or CAD) program.\nVector graphics finds its most important application in engineering\nand architectural design.</P>\n<P>A\nvector graphics image can be stored in a file in a format referred to\nas a metafile.</P>\n<P>Raster\ngraphics (also known as bitmap graphics) comes to the rescue.</P>\n<P>A\nbitmap encodes an image as a rectangular array of bits that\ncorrespond to the pixels of an output device. Just like a video\ndisplay, a bitmap has a spatial dimension (or resolution), which is\nthe width and height of the image in pixels.</P>\n<P>Bitmaps\nalso have a color dimension (or color resolution, or color depth),\nwhich is the number of bits associated with each pixel.</P>\n<P>Both\nRLE and LZW are referred to as lossless compression techniques\nbecause the original file can be entirely recreated from the\ncompressed data.</P>\n<P>A\nlossy compression isn't reversible because some of the original data\nis effectively discarded.</P>\n<P>That's\nwhy lossy compression techniques are based on psychovisual research\nthat investigates human vision to determine what's important and\nwhat's not.</P>\n<P>In\nparticular, whenever analog sound is copied some fidelity is lost.</P>\n<P>Digitized\nsound is numbers, however, and numbers can always be faithfully\ntranscribed and copied.</P>\n<P>MPEG\ncompression is used for movies. Moving Pictures Expert Group.\nCompression techniques for moving images take advantage of the fact\nthat a particular frame usually contains much information that's\nduplicated from the previous frame.</P>\n<P>Java\nis somewhere in between. Java programs must be compiled, but the\nresult of the compilation usually isn't machine code. It's instead\nJava byte codes.</P>\n<P STYLE=\"margin-bottom: 0.11in\"><BR><BR>\n</P>\n\n</mat-expansion-panel>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}